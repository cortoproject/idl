Terminals unused in grammar

   T_UNKNOWN


Grammar

    0 $accept: specification $end

    1 specification: %empty
    2              | definitions

    3 definitions: definition
    4            | definition definitions

    5 definition: type_dcl T_SEMICOLON
    6           | const_dcl T_SEMICOLON
    7           | except_dcl T_SEMICOLON
    8           | interface T_SEMICOLON
    9           | module T_SEMICOLON
   10           | value T_SEMICOLON
   11           | pragma
   12           | error

   13 pragma: T_PRAGMA

   14 $@1: %empty

   15 $@2: %empty

   16 module: T_MODULE T_IDENTIFIER $@1 T_LEFT_CURLY_BRACKET definitions $@2 T_RIGHT_CURLY_BRACKET

   17 interface: interface_dcl
   18          | forward_dcl

   19 interface_dcl: interface_header T_LEFT_CURLY_BRACKET interface_body T_RIGHT_CURLY_BRACKET

   20 forward_dcl: T_INTERFACE T_IDENTIFIER
   21            | T_ABSTRACT T_INTERFACE T_IDENTIFIER

   22 interface_header: T_INTERFACE T_IDENTIFIER
   23                 | T_INTERFACE T_IDENTIFIER interface_inheritance_spec
   24                 | T_ABSTRACT T_INTERFACE T_IDENTIFIER
   25                 | T_ABSTRACT T_INTERFACE T_IDENTIFIER interface_inheritance_spec

   26 interface_body: %empty
   27               | exports

   28 exports: export
   29        | export exports

   30 export: type_dcl T_SEMICOLON
   31       | const_dcl T_SEMICOLON
   32       | except_dcl T_SEMICOLON
   33       | attr_dcl T_SEMICOLON
   34       | op_dcl T_SEMICOLON

   35 interface_inheritance_spec: T_COLON interface_names

   36 interface_names: scoped_names

   37 scoped_names: scoped_name
   38             | scoped_name T_COMMA scoped_names

   39 scoped_name: T_IDENTIFIER
   40            | T_SCOPE T_IDENTIFIER
   41            | scoped_name T_SCOPE T_IDENTIFIER

   42 value: value_dcl
   43      | value_abs_dcl
   44      | value_box_dcl
   45      | value_forward_dcl

   46 value_forward_dcl: T_VALUETYPE T_IDENTIFIER
   47                  | T_ABSTRACT T_VALUETYPE T_IDENTIFIER

   48 value_box_dcl: T_VALUETYPE T_IDENTIFIER type_spec

   49 value_abs_dcl: T_ABSTRACT T_VALUETYPE T_IDENTIFIER T_LEFT_CURLY_BRACKET value_body T_RIGHT_CURLY_BRACKET
   50              | T_ABSTRACT T_VALUETYPE T_IDENTIFIER value_inheritance_spec T_LEFT_CURLY_BRACKET value_body T_RIGHT_CURLY_BRACKET

   51 value_body: %empty
   52           | exports

   53 value_dcl: value_header T_LEFT_CURLY_BRACKET value_elements T_RIGHT_CURLY_BRACKET
   54          | value_header T_LEFT_CURLY_BRACKET T_RIGHT_CURLY_BRACKET

   55 value_elements: value_element
   56               | value_element value_elements

   57 value_header: T_VALUETYPE T_IDENTIFIER value_inheritance_spec
   58             | T_CUSTOM T_VALUETYPE T_IDENTIFIER value_inheritance_spec
   59             | T_VALUETYPE T_IDENTIFIER
   60             | T_CUSTOM T_VALUETYPE T_IDENTIFIER

   61 value_inheritance_spec: T_COLON value_inheritance_bases
   62                       | T_COLON value_inheritance_bases T_SUPPORTS interface_names
   63                       | T_SUPPORTS interface_names

   64 value_inheritance_bases: value_name
   65                        | value_name T_COMMA value_names
   66                        | T_TRUNCATABLE value_name
   67                        | T_TRUNCATABLE value_name T_COMMA value_names

   68 value_names: scoped_names

   69 value_name: scoped_name

   70 value_element: export
   71              | state_member
   72              | init_dcl

   73 state_member: T_PUBLIC type_spec declarators T_SEMICOLON
   74             | T_PRIVATE type_spec declarators T_SEMICOLON

   75 init_dcl: T_FACTORY T_IDENTIFIER T_LEFT_PARANTHESIS init_param_decls T_RIGHT_PARANTHESIS T_SEMICOLON

   76 init_param_decls: init_param_decl
   77                 | init_param_decl T_COMMA init_param_decls

   78 init_param_decl: init_param_attribute param_type_spec simple_declarator

   79 init_param_attribute: T_IN

   80 const_dcl: T_CONST const_type T_IDENTIFIER T_EQUAL const_exp

   81 const_type: integer_type
   82           | char_type
   83           | wide_char_type
   84           | boolean_type
   85           | floating_pt_type
   86           | string_type
   87           | wide_string_type
   88           | fixed_pt_const_type
   89           | scoped_name
   90           | octet_type

   91 const_exp: or_expr

   92 or_expr: xor_expr
   93        | or_expr T_VERTICAL_LINE xor_expr

   94 xor_expr: and_expr
   95         | xor_expr T_CIRCUMFLEX and_expr

   96 and_expr: shift_expr
   97         | and_expr T_AMPERSAND shift_expr

   98 shift_expr: add_expr
   99           | shift_expr T_SHIFTRIGHT add_expr
  100           | shift_expr T_SHIFTLEFT add_expr

  101 add_expr: mult_expr
  102         | add_expr T_PLUS_SIGN mult_expr
  103         | add_expr T_MINUS_SIGN mult_expr

  104 mult_expr: unary_expr
  105          | mult_expr T_ASTERISK unary_expr
  106          | mult_expr T_SOLIDUS unary_expr
  107          | mult_expr T_PERCENT_SIGN unary_expr

  108 unary_expr: T_MINUS_SIGN primary_expr
  109           | T_PLUS_SIGN primary_expr
  110           | T_TILDE primary_expr
  111           | primary_expr

  112 primary_expr: scoped_name
  113             | literal
  114             | T_LEFT_PARANTHESIS const_exp T_RIGHT_PARANTHESIS

  115 literal: T_INTEGER_LITERAL
  116        | T_string_literal
  117        | T_CHARACTER_LITERAL
  118        | T_FIXED_PT_LITERAL
  119        | T_FLOATING_PT_LITERAL
  120        | T_TRUE
  121        | T_FALSE

  122 positive_int_const: const_exp

  123 type_dcl: T_TYPEDEF type_spec declarators
  124         | struct_type
  125         | union_type
  126         | enum_type
  127         | T_NATIVE simple_declarator

  128 type_spec: simple_type_spec
  129          | constr_type_spec

  130 simple_type_spec: base_type_spec
  131                 | template_type_spec
  132                 | scoped_name

  133 base_type_spec: floating_pt_type
  134               | integer_type
  135               | char_type
  136               | wide_char_type
  137               | boolean_type
  138               | octet_type
  139               | any_type
  140               | object_type
  141               | value_base_type
  142               | principal_type

  143 template_type_spec: sequence_type
  144                   | string_type
  145                   | wide_string_type
  146                   | fixed_pt_type

  147 constr_type_spec: struct_type
  148                 | union_type
  149                 | enum_type

  150 declarators: declarator
  151            | declarator T_COMMA declarators

  152 declarator: simple_declarator
  153           | complex_declarator

  154 simple_declarator: T_IDENTIFIER

  155 complex_declarator: array_declarator

  156 floating_pt_type: T_FLOAT
  157                 | T_DOUBLE
  158                 | T_LONG T_DOUBLE

  159 integer_type: signed_int
  160             | unsigned_int

  161 signed_int: signed_long_int
  162           | signed_short_int
  163           | signed_longlong_int

  164 signed_short_int: T_SHORT

  165 signed_long_int: T_LONG

  166 signed_longlong_int: T_LONG T_LONG

  167 unsigned_int: unsigned_long_int
  168             | unsigned_short_int
  169             | unsigned_longlong_int

  170 unsigned_short_int: T_UNSIGNED T_SHORT

  171 unsigned_long_int: T_UNSIGNED T_LONG

  172 unsigned_longlong_int: T_UNSIGNED T_LONG T_LONG

  173 char_type: T_CHAR

  174 wide_char_type: T_WCHAR

  175 boolean_type: T_BOOLEAN

  176 octet_type: T_OCTET

  177 any_type: T_ANY

  178 object_type: T_OBJECT

  179 @3: %empty

  180 struct_type: T_STRUCT T_IDENTIFIER @3 T_LEFT_CURLY_BRACKET member_list T_RIGHT_CURLY_BRACKET

  181 member_list: member
  182            | member member_list

  183 member: type_spec declarators T_SEMICOLON

  184 @4: %empty

  185 union_type: T_UNION T_IDENTIFIER T_SWITCH T_LEFT_PARANTHESIS switch_type_spec T_RIGHT_PARANTHESIS @4 T_LEFT_CURLY_BRACKET switch_body T_RIGHT_CURLY_BRACKET

  186 switch_type_spec: integer_type
  187                 | char_type
  188                 | boolean_type
  189                 | enum_type
  190                 | scoped_name

  191 switch_body: case
  192            | case switch_body

  193 case: case_label case
  194     | case_label element_spec T_SEMICOLON

  195 case_label: T_CASE const_exp T_COLON
  196           | T_DEFAULT T_COLON

  197 element_spec: type_spec declarator

  198 enum_type: T_ENUM T_IDENTIFIER T_LEFT_CURLY_BRACKET enumerators T_RIGHT_CURLY_BRACKET

  199 enumerators: enumerator
  200            | enumerator T_COMMA enumerators

  201 enumerator: T_IDENTIFIER

  202 sequence_type: T_SEQUENCE T_LESS_THAN_SIGN simple_type_spec T_COMMA positive_int_const T_GREATER_THAN_SIGN
  203              | T_SEQUENCE T_LESS_THAN_SIGN simple_type_spec T_GREATER_THAN_SIGN

  204 string_type: T_STRING T_LESS_THAN_SIGN positive_int_const T_GREATER_THAN_SIGN
  205            | T_STRING

  206 wide_string_type: T_WSTRING T_LESS_THAN_SIGN positive_int_const T_GREATER_THAN_SIGN
  207                 | T_WSTRING

  208 array_declarator: T_IDENTIFIER fixed_array_sizes

  209 fixed_array_sizes: fixed_array_size
  210                  | fixed_array_size fixed_array_sizes

  211 fixed_array_size: T_LEFT_SQUARE_BRACKET positive_int_const T_RIGHT_SQUARE_BRACKET

  212 attr_dcl: T_ATTRIBUTE param_type_spec simple_declarators
  213         | T_READONLY T_ATTRIBUTE param_type_spec simple_declarators

  214 simple_declarators: simple_declarator
  215                   | simple_declarator T_COMMA simple_declarators

  216 except_dcl: T_EXCEPTION T_IDENTIFIER T_LEFT_CURLY_BRACKET members T_RIGHT_CURLY_BRACKET

  217 members: %empty
  218        | member members

  219 op_dcl: op_attribute op_type_spec T_IDENTIFIER parameter_dcls raises_expr context_expr

  220 op_attribute: %empty
  221             | T_ONEWAY

  222 op_type_spec: param_type_spec
  223             | T_VOID

  224 parameter_dcls: T_LEFT_PARANTHESIS param_dcls T_RIGHT_PARANTHESIS
  225               | T_LEFT_PARANTHESIS T_RIGHT_PARANTHESIS

  226 param_dcls: param_dcl
  227           | param_dcl T_COMMA param_dcls

  228 param_dcl: param_attribute param_type_spec simple_declarator

  229 param_attribute: T_IN
  230                | T_OUT
  231                | T_INOUT

  232 raises_expr: %empty
  233            | T_RAISES T_LEFT_PARANTHESIS scoped_names T_RIGHT_PARANTHESIS

  234 context_expr: %empty
  235             | T_CONTEXT T_LEFT_PARANTHESIS string_literals T_RIGHT_PARANTHESIS

  236 string_literals: T_string_literal
  237                | T_string_literal T_COMMA string_literals

  238 T_string_literal: T_STRING_LITERAL
  239                 | T_STRING_LITERAL T_string_literal

  240 param_type_spec: base_type_spec
  241                | string_type
  242                | wide_string_type
  243                | scoped_name

  244 fixed_pt_type: T_FIXED T_LESS_THAN_SIGN positive_int_const T_COMMA T_INTEGER_LITERAL T_GREATER_THAN_SIGN

  245 fixed_pt_const_type: T_FIXED

  246 value_base_type: T_VALUEBASE

  247 principal_type: T_PRINCIPAL


Terminals, with rules where they appear

$end (0) 0
error (256) 12
T_AMPERSAND (258) 97
T_ANY (259) 177
T_ASTERISK (260) 105
T_ATTRIBUTE (261) 212 213
T_BOOLEAN (262) 175
T_CASE (263) 195
T_CHAR (264) 173
T_CHARACTER_LITERAL (265) 117
T_CIRCUMFLEX (266) 95
T_COLON (267) 35 61 62 195 196
T_COMMA (268) 38 65 67 77 151 200 202 215 227 237 244
T_CONST (269) 80
T_CONTEXT (270) 235
T_DEFAULT (271) 196
T_DOUBLE (272) 157 158
T_ENUM (273) 198
T_EQUAL (274) 80
T_EXCEPTION (275) 216
T_FALSE (276) 121
T_FIXED (277) 244 245
T_FIXED_PT_LITERAL (278) 118
T_FLOAT (279) 156
T_FLOATING_PT_LITERAL (280) 119
T_GREATER_THAN_SIGN (281) 202 203 204 206 244
T_IDENTIFIER (282) 16 20 21 22 23 24 25 39 40 41 46 47 48 49 50 57
    58 59 60 75 80 154 180 185 198 201 208 216 219
T_IN (283) 79 229
T_INOUT (284) 231
T_INTEGER_LITERAL (285) 115 244
T_INTERFACE (286) 20 21 22 23 24 25
T_LEFT_CURLY_BRACKET (287) 16 19 49 50 53 54 180 185 198 216
T_LEFT_PARANTHESIS (288) 75 114 185 224 225 233 235
T_LEFT_SQUARE_BRACKET (289) 211
T_LESS_THAN_SIGN (290) 202 203 204 206 244
T_LONG (291) 158 165 166 171 172
T_MINUS_SIGN (292) 103 108
T_MODULE (293) 16
T_OCTET (294) 176
T_ONEWAY (295) 221
T_OUT (296) 230
T_PERCENT_SIGN (297) 107
T_PLUS_SIGN (298) 102 109
T_PRINCIPAL (299) 247
T_RAISES (300) 233
T_READONLY (301) 213
T_RIGHT_CURLY_BRACKET (302) 16 19 49 50 53 54 180 185 198 216
T_RIGHT_PARANTHESIS (303) 75 114 185 224 225 233 235
T_RIGHT_SQUARE_BRACKET (304) 211
T_SCOPE (305) 40 41
T_SEMICOLON (306) 5 6 7 8 9 10 30 31 32 33 34 73 74 75 183 194
T_SEQUENCE (307) 202 203
T_SHIFTLEFT (308) 100
T_SHIFTRIGHT (309) 99
T_SHORT (310) 164 170
T_SOLIDUS (311) 106
T_STRING (312) 204 205
T_STRING_LITERAL (313) 238 239
T_PRAGMA (314) 13
T_STRUCT (315) 180
T_SWITCH (316) 185
T_TILDE (317) 110
T_TRUE (318) 120
T_OBJECT (319) 178
T_TYPEDEF (320) 123
T_UNION (321) 185
T_UNSIGNED (322) 170 171 172
T_VERTICAL_LINE (323) 93
T_VOID (324) 223
T_WCHAR (325) 174
T_WSTRING (326) 206 207
T_UNKNOWN (327)
T_ABSTRACT (328) 21 24 25 47 49 50
T_VALUETYPE (329) 46 47 48 49 50 57 58 59 60
T_TRUNCATABLE (330) 66 67
T_SUPPORTS (331) 62 63
T_CUSTOM (332) 58 60
T_PUBLIC (333) 73
T_PRIVATE (334) 74
T_FACTORY (335) 75
T_NATIVE (336) 127
T_VALUEBASE (337) 246


Nonterminals, with rules where they appear

$accept (83)
    on left: 0
specification (84)
    on left: 1 2, on right: 0
definitions (85)
    on left: 3 4, on right: 2 4 16
definition (86)
    on left: 5 6 7 8 9 10 11 12, on right: 3 4
pragma (87)
    on left: 13, on right: 11
module (88)
    on left: 16, on right: 9
$@1 (89)
    on left: 14, on right: 16
$@2 (90)
    on left: 15, on right: 16
interface (91)
    on left: 17 18, on right: 8
interface_dcl (92)
    on left: 19, on right: 17
forward_dcl (93)
    on left: 20 21, on right: 18
interface_header (94)
    on left: 22 23 24 25, on right: 19
interface_body (95)
    on left: 26 27, on right: 19
exports (96)
    on left: 28 29, on right: 27 29 52
export (97)
    on left: 30 31 32 33 34, on right: 28 29 70
interface_inheritance_spec (98)
    on left: 35, on right: 23 25
interface_names (99)
    on left: 36, on right: 35 62 63
scoped_names (100)
    on left: 37 38, on right: 36 38 68 233
scoped_name (101)
    on left: 39 40 41, on right: 37 38 41 69 89 112 132 190 243
value (102)
    on left: 42 43 44 45, on right: 10
value_forward_dcl (103)
    on left: 46 47, on right: 45
value_box_dcl (104)
    on left: 48, on right: 44
value_abs_dcl (105)
    on left: 49 50, on right: 43
value_body (106)
    on left: 51 52, on right: 49 50
value_dcl (107)
    on left: 53 54, on right: 42
value_elements (108)
    on left: 55 56, on right: 53 56
value_header (109)
    on left: 57 58 59 60, on right: 53 54
value_inheritance_spec (110)
    on left: 61 62 63, on right: 50 57 58
value_inheritance_bases (111)
    on left: 64 65 66 67, on right: 61 62
value_names (112)
    on left: 68, on right: 65 67
value_name (113)
    on left: 69, on right: 64 65 66 67
value_element (114)
    on left: 70 71 72, on right: 55 56
state_member (115)
    on left: 73 74, on right: 71
init_dcl (116)
    on left: 75, on right: 72
init_param_decls (117)
    on left: 76 77, on right: 75 77
init_param_decl (118)
    on left: 78, on right: 76 77
init_param_attribute (119)
    on left: 79, on right: 78
const_dcl (120)
    on left: 80, on right: 6 31
const_type (121)
    on left: 81 82 83 84 85 86 87 88 89 90, on right: 80
const_exp (122)
    on left: 91, on right: 80 114 122 195
or_expr (123)
    on left: 92 93, on right: 91 93
xor_expr (124)
    on left: 94 95, on right: 92 93 95
and_expr (125)
    on left: 96 97, on right: 94 95 97
shift_expr (126)
    on left: 98 99 100, on right: 96 97 99 100
add_expr (127)
    on left: 101 102 103, on right: 98 99 100 102 103
mult_expr (128)
    on left: 104 105 106 107, on right: 101 102 103 105 106 107
unary_expr (129)
    on left: 108 109 110 111, on right: 104 105 106 107
primary_expr (130)
    on left: 112 113 114, on right: 108 109 110 111
literal (131)
    on left: 115 116 117 118 119 120 121, on right: 113
positive_int_const (132)
    on left: 122, on right: 202 204 206 211 244
type_dcl (133)
    on left: 123 124 125 126 127, on right: 5 30
type_spec (134)
    on left: 128 129, on right: 48 73 74 123 183 197
simple_type_spec (135)
    on left: 130 131 132, on right: 128 202 203
base_type_spec (136)
    on left: 133 134 135 136 137 138 139 140 141 142, on right: 130
    240
template_type_spec (137)
    on left: 143 144 145 146, on right: 131
constr_type_spec (138)
    on left: 147 148 149, on right: 129
declarators (139)
    on left: 150 151, on right: 73 74 123 151 183
declarator (140)
    on left: 152 153, on right: 150 151 197
simple_declarator (141)
    on left: 154, on right: 78 127 152 214 215 228
complex_declarator (142)
    on left: 155, on right: 153
floating_pt_type (143)
    on left: 156 157 158, on right: 85 133
integer_type (144)
    on left: 159 160, on right: 81 134 186
signed_int (145)
    on left: 161 162 163, on right: 159
signed_short_int (146)
    on left: 164, on right: 162
signed_long_int (147)
    on left: 165, on right: 161
signed_longlong_int (148)
    on left: 166, on right: 163
unsigned_int (149)
    on left: 167 168 169, on right: 160
unsigned_short_int (150)
    on left: 170, on right: 168
unsigned_long_int (151)
    on left: 171, on right: 167
unsigned_longlong_int (152)
    on left: 172, on right: 169
char_type (153)
    on left: 173, on right: 82 135 187
wide_char_type (154)
    on left: 174, on right: 83 136
boolean_type (155)
    on left: 175, on right: 84 137 188
octet_type (156)
    on left: 176, on right: 90 138
any_type (157)
    on left: 177, on right: 139
object_type (158)
    on left: 178, on right: 140
struct_type (159)
    on left: 180, on right: 124 147
@3 (160)
    on left: 179, on right: 180
member_list (161)
    on left: 181 182, on right: 180 182
member (162)
    on left: 183, on right: 181 182 218
union_type (163)
    on left: 185, on right: 125 148
@4 (164)
    on left: 184, on right: 185
switch_type_spec (165)
    on left: 186 187 188 189 190, on right: 185
switch_body (166)
    on left: 191 192, on right: 185 192
case (167)
    on left: 193 194, on right: 191 192 193
case_label (168)
    on left: 195 196, on right: 193 194
element_spec (169)
    on left: 197, on right: 194
enum_type (170)
    on left: 198, on right: 126 149 189
enumerators (171)
    on left: 199 200, on right: 198 200
enumerator (172)
    on left: 201, on right: 199 200
sequence_type (173)
    on left: 202 203, on right: 143
string_type (174)
    on left: 204 205, on right: 86 144 241
wide_string_type (175)
    on left: 206 207, on right: 87 145 242
array_declarator (176)
    on left: 208, on right: 155
fixed_array_sizes (177)
    on left: 209 210, on right: 208 210
fixed_array_size (178)
    on left: 211, on right: 209 210
attr_dcl (179)
    on left: 212 213, on right: 33
simple_declarators (180)
    on left: 214 215, on right: 212 213 215
except_dcl (181)
    on left: 216, on right: 7 32
members (182)
    on left: 217 218, on right: 216 218
op_dcl (183)
    on left: 219, on right: 34
op_attribute (184)
    on left: 220 221, on right: 219
op_type_spec (185)
    on left: 222 223, on right: 219
parameter_dcls (186)
    on left: 224 225, on right: 219
param_dcls (187)
    on left: 226 227, on right: 224 227
param_dcl (188)
    on left: 228, on right: 226 227
param_attribute (189)
    on left: 229 230 231, on right: 228
raises_expr (190)
    on left: 232 233, on right: 219
context_expr (191)
    on left: 234 235, on right: 219
string_literals (192)
    on left: 236 237, on right: 235 237
T_string_literal (193)
    on left: 238 239, on right: 116 236 237 239
param_type_spec (194)
    on left: 240 241 242 243, on right: 78 212 213 222 228
fixed_pt_type (195)
    on left: 244, on right: 146
fixed_pt_const_type (196)
    on left: 245, on right: 88
value_base_type (197)
    on left: 246, on right: 141
principal_type (198)
    on left: 247, on right: 142


State 0

    0 $accept: . specification $end

    error        shift, and go to state 1
    T_CONST      shift, and go to state 2
    T_ENUM       shift, and go to state 3
    T_EXCEPTION  shift, and go to state 4
    T_INTERFACE  shift, and go to state 5
    T_MODULE     shift, and go to state 6
    T_PRAGMA     shift, and go to state 7
    T_STRUCT     shift, and go to state 8
    T_TYPEDEF    shift, and go to state 9
    T_UNION      shift, and go to state 10
    T_ABSTRACT   shift, and go to state 11
    T_VALUETYPE  shift, and go to state 12
    T_CUSTOM     shift, and go to state 13
    T_NATIVE     shift, and go to state 14

    $end  reduce using rule 1 (specification)

    specification      go to state 15
    definitions        go to state 16
    definition         go to state 17
    pragma             go to state 18
    module             go to state 19
    interface          go to state 20
    interface_dcl      go to state 21
    forward_dcl        go to state 22
    interface_header   go to state 23
    value              go to state 24
    value_forward_dcl  go to state 25
    value_box_dcl      go to state 26
    value_abs_dcl      go to state 27
    value_dcl          go to state 28
    value_header       go to state 29
    const_dcl          go to state 30
    type_dcl           go to state 31
    struct_type        go to state 32
    union_type         go to state 33
    enum_type          go to state 34
    except_dcl         go to state 35


State 1

   12 definition: error .

    $default  reduce using rule 12 (definition)


State 2

   80 const_dcl: T_CONST . const_type T_IDENTIFIER T_EQUAL const_exp

    T_BOOLEAN     shift, and go to state 36
    T_CHAR        shift, and go to state 37
    T_DOUBLE      shift, and go to state 38
    T_FIXED       shift, and go to state 39
    T_FLOAT       shift, and go to state 40
    T_IDENTIFIER  shift, and go to state 41
    T_LONG        shift, and go to state 42
    T_OCTET       shift, and go to state 43
    T_SCOPE       shift, and go to state 44
    T_SHORT       shift, and go to state 45
    T_STRING      shift, and go to state 46
    T_UNSIGNED    shift, and go to state 47
    T_WCHAR       shift, and go to state 48
    T_WSTRING     shift, and go to state 49

    scoped_name            go to state 50
    const_type             go to state 51
    floating_pt_type       go to state 52
    integer_type           go to state 53
    signed_int             go to state 54
    signed_short_int       go to state 55
    signed_long_int        go to state 56
    signed_longlong_int    go to state 57
    unsigned_int           go to state 58
    unsigned_short_int     go to state 59
    unsigned_long_int      go to state 60
    unsigned_longlong_int  go to state 61
    char_type              go to state 62
    wide_char_type         go to state 63
    boolean_type           go to state 64
    octet_type             go to state 65
    string_type            go to state 66
    wide_string_type       go to state 67
    fixed_pt_const_type    go to state 68


State 3

  198 enum_type: T_ENUM . T_IDENTIFIER T_LEFT_CURLY_BRACKET enumerators T_RIGHT_CURLY_BRACKET

    T_IDENTIFIER  shift, and go to state 69


State 4

  216 except_dcl: T_EXCEPTION . T_IDENTIFIER T_LEFT_CURLY_BRACKET members T_RIGHT_CURLY_BRACKET

    T_IDENTIFIER  shift, and go to state 70


State 5

   20 forward_dcl: T_INTERFACE . T_IDENTIFIER
   22 interface_header: T_INTERFACE . T_IDENTIFIER
   23                 | T_INTERFACE . T_IDENTIFIER interface_inheritance_spec

    T_IDENTIFIER  shift, and go to state 71


State 6

   16 module: T_MODULE . T_IDENTIFIER $@1 T_LEFT_CURLY_BRACKET definitions $@2 T_RIGHT_CURLY_BRACKET

    T_IDENTIFIER  shift, and go to state 72


State 7

   13 pragma: T_PRAGMA .

    $default  reduce using rule 13 (pragma)


State 8

  180 struct_type: T_STRUCT . T_IDENTIFIER @3 T_LEFT_CURLY_BRACKET member_list T_RIGHT_CURLY_BRACKET

    T_IDENTIFIER  shift, and go to state 73


State 9

  123 type_dcl: T_TYPEDEF . type_spec declarators

    T_ANY         shift, and go to state 74
    T_BOOLEAN     shift, and go to state 36
    T_CHAR        shift, and go to state 37
    T_DOUBLE      shift, and go to state 38
    T_ENUM        shift, and go to state 3
    T_FIXED       shift, and go to state 75
    T_FLOAT       shift, and go to state 40
    T_IDENTIFIER  shift, and go to state 41
    T_LONG        shift, and go to state 42
    T_OCTET       shift, and go to state 43
    T_PRINCIPAL   shift, and go to state 76
    T_SCOPE       shift, and go to state 44
    T_SEQUENCE    shift, and go to state 77
    T_SHORT       shift, and go to state 45
    T_STRING      shift, and go to state 46
    T_STRUCT      shift, and go to state 8
    T_OBJECT      shift, and go to state 78
    T_UNION       shift, and go to state 10
    T_UNSIGNED    shift, and go to state 47
    T_WCHAR       shift, and go to state 48
    T_WSTRING     shift, and go to state 49
    T_VALUEBASE   shift, and go to state 79

    scoped_name            go to state 80
    type_spec              go to state 81
    simple_type_spec       go to state 82
    base_type_spec         go to state 83
    template_type_spec     go to state 84
    constr_type_spec       go to state 85
    floating_pt_type       go to state 86
    integer_type           go to state 87
    signed_int             go to state 54
    signed_short_int       go to state 55
    signed_long_int        go to state 56
    signed_longlong_int    go to state 57
    unsigned_int           go to state 58
    unsigned_short_int     go to state 59
    unsigned_long_int      go to state 60
    unsigned_longlong_int  go to state 61
    char_type              go to state 88
    wide_char_type         go to state 89
    boolean_type           go to state 90
    octet_type             go to state 91
    any_type               go to state 92
    object_type            go to state 93
    struct_type            go to state 94
    union_type             go to state 95
    enum_type              go to state 96
    sequence_type          go to state 97
    string_type            go to state 98
    wide_string_type       go to state 99
    fixed_pt_type          go to state 100
    value_base_type        go to state 101
    principal_type         go to state 102


State 10

  185 union_type: T_UNION . T_IDENTIFIER T_SWITCH T_LEFT_PARANTHESIS switch_type_spec T_RIGHT_PARANTHESIS @4 T_LEFT_CURLY_BRACKET switch_body T_RIGHT_CURLY_BRACKET

    T_IDENTIFIER  shift, and go to state 103


State 11

   21 forward_dcl: T_ABSTRACT . T_INTERFACE T_IDENTIFIER
   24 interface_header: T_ABSTRACT . T_INTERFACE T_IDENTIFIER
   25                 | T_ABSTRACT . T_INTERFACE T_IDENTIFIER interface_inheritance_spec
   47 value_forward_dcl: T_ABSTRACT . T_VALUETYPE T_IDENTIFIER
   49 value_abs_dcl: T_ABSTRACT . T_VALUETYPE T_IDENTIFIER T_LEFT_CURLY_BRACKET value_body T_RIGHT_CURLY_BRACKET
   50              | T_ABSTRACT . T_VALUETYPE T_IDENTIFIER value_inheritance_spec T_LEFT_CURLY_BRACKET value_body T_RIGHT_CURLY_BRACKET

    T_INTERFACE  shift, and go to state 104
    T_VALUETYPE  shift, and go to state 105


State 12

   46 value_forward_dcl: T_VALUETYPE . T_IDENTIFIER
   48 value_box_dcl: T_VALUETYPE . T_IDENTIFIER type_spec
   57 value_header: T_VALUETYPE . T_IDENTIFIER value_inheritance_spec
   59             | T_VALUETYPE . T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 106


State 13

   58 value_header: T_CUSTOM . T_VALUETYPE T_IDENTIFIER value_inheritance_spec
   60             | T_CUSTOM . T_VALUETYPE T_IDENTIFIER

    T_VALUETYPE  shift, and go to state 107


State 14

  127 type_dcl: T_NATIVE . simple_declarator

    T_IDENTIFIER  shift, and go to state 108

    simple_declarator  go to state 109


State 15

    0 $accept: specification . $end

    $end  shift, and go to state 110


State 16

    2 specification: definitions .

    $default  reduce using rule 2 (specification)


State 17

    3 definitions: definition .
    4            | definition . definitions

    error        shift, and go to state 1
    T_CONST      shift, and go to state 2
    T_ENUM       shift, and go to state 3
    T_EXCEPTION  shift, and go to state 4
    T_INTERFACE  shift, and go to state 5
    T_MODULE     shift, and go to state 6
    T_PRAGMA     shift, and go to state 7
    T_STRUCT     shift, and go to state 8
    T_TYPEDEF    shift, and go to state 9
    T_UNION      shift, and go to state 10
    T_ABSTRACT   shift, and go to state 11
    T_VALUETYPE  shift, and go to state 12
    T_CUSTOM     shift, and go to state 13
    T_NATIVE     shift, and go to state 14

    $end                   reduce using rule 3 (definitions)
    T_RIGHT_CURLY_BRACKET  reduce using rule 3 (definitions)

    definitions        go to state 111
    definition         go to state 17
    pragma             go to state 18
    module             go to state 19
    interface          go to state 20
    interface_dcl      go to state 21
    forward_dcl        go to state 22
    interface_header   go to state 23
    value              go to state 24
    value_forward_dcl  go to state 25
    value_box_dcl      go to state 26
    value_abs_dcl      go to state 27
    value_dcl          go to state 28
    value_header       go to state 29
    const_dcl          go to state 30
    type_dcl           go to state 31
    struct_type        go to state 32
    union_type         go to state 33
    enum_type          go to state 34
    except_dcl         go to state 35


State 18

   11 definition: pragma .

    $default  reduce using rule 11 (definition)


State 19

    9 definition: module . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 112


State 20

    8 definition: interface . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 113


State 21

   17 interface: interface_dcl .

    $default  reduce using rule 17 (interface)


State 22

   18 interface: forward_dcl .

    $default  reduce using rule 18 (interface)


State 23

   19 interface_dcl: interface_header . T_LEFT_CURLY_BRACKET interface_body T_RIGHT_CURLY_BRACKET

    T_LEFT_CURLY_BRACKET  shift, and go to state 114


State 24

   10 definition: value . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 115


State 25

   45 value: value_forward_dcl .

    $default  reduce using rule 45 (value)


State 26

   44 value: value_box_dcl .

    $default  reduce using rule 44 (value)


State 27

   43 value: value_abs_dcl .

    $default  reduce using rule 43 (value)


State 28

   42 value: value_dcl .

    $default  reduce using rule 42 (value)


State 29

   53 value_dcl: value_header . T_LEFT_CURLY_BRACKET value_elements T_RIGHT_CURLY_BRACKET
   54          | value_header . T_LEFT_CURLY_BRACKET T_RIGHT_CURLY_BRACKET

    T_LEFT_CURLY_BRACKET  shift, and go to state 116


State 30

    6 definition: const_dcl . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 117


State 31

    5 definition: type_dcl . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 118


State 32

  124 type_dcl: struct_type .

    $default  reduce using rule 124 (type_dcl)


State 33

  125 type_dcl: union_type .

    $default  reduce using rule 125 (type_dcl)


State 34

  126 type_dcl: enum_type .

    $default  reduce using rule 126 (type_dcl)


State 35

    7 definition: except_dcl . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 119


State 36

  175 boolean_type: T_BOOLEAN .

    $default  reduce using rule 175 (boolean_type)


State 37

  173 char_type: T_CHAR .

    $default  reduce using rule 173 (char_type)


State 38

  157 floating_pt_type: T_DOUBLE .

    $default  reduce using rule 157 (floating_pt_type)


State 39

  245 fixed_pt_const_type: T_FIXED .

    $default  reduce using rule 245 (fixed_pt_const_type)


State 40

  156 floating_pt_type: T_FLOAT .

    $default  reduce using rule 156 (floating_pt_type)


State 41

   39 scoped_name: T_IDENTIFIER .

    $default  reduce using rule 39 (scoped_name)


State 42

  158 floating_pt_type: T_LONG . T_DOUBLE
  165 signed_long_int: T_LONG .
  166 signed_longlong_int: T_LONG . T_LONG

    T_DOUBLE  shift, and go to state 120
    T_LONG    shift, and go to state 121

    $default  reduce using rule 165 (signed_long_int)


State 43

  176 octet_type: T_OCTET .

    $default  reduce using rule 176 (octet_type)


State 44

   40 scoped_name: T_SCOPE . T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 122


State 45

  164 signed_short_int: T_SHORT .

    $default  reduce using rule 164 (signed_short_int)


State 46

  204 string_type: T_STRING . T_LESS_THAN_SIGN positive_int_const T_GREATER_THAN_SIGN
  205            | T_STRING .

    T_LESS_THAN_SIGN  shift, and go to state 123

    $default  reduce using rule 205 (string_type)


State 47

  170 unsigned_short_int: T_UNSIGNED . T_SHORT
  171 unsigned_long_int: T_UNSIGNED . T_LONG
  172 unsigned_longlong_int: T_UNSIGNED . T_LONG T_LONG

    T_LONG   shift, and go to state 124
    T_SHORT  shift, and go to state 125


State 48

  174 wide_char_type: T_WCHAR .

    $default  reduce using rule 174 (wide_char_type)


State 49

  206 wide_string_type: T_WSTRING . T_LESS_THAN_SIGN positive_int_const T_GREATER_THAN_SIGN
  207                 | T_WSTRING .

    T_LESS_THAN_SIGN  shift, and go to state 126

    $default  reduce using rule 207 (wide_string_type)


State 50

   41 scoped_name: scoped_name . T_SCOPE T_IDENTIFIER
   89 const_type: scoped_name .

    T_SCOPE  shift, and go to state 127

    $default  reduce using rule 89 (const_type)


State 51

   80 const_dcl: T_CONST const_type . T_IDENTIFIER T_EQUAL const_exp

    T_IDENTIFIER  shift, and go to state 128


State 52

   85 const_type: floating_pt_type .

    $default  reduce using rule 85 (const_type)


State 53

   81 const_type: integer_type .

    $default  reduce using rule 81 (const_type)


State 54

  159 integer_type: signed_int .

    $default  reduce using rule 159 (integer_type)


State 55

  162 signed_int: signed_short_int .

    $default  reduce using rule 162 (signed_int)


State 56

  161 signed_int: signed_long_int .

    $default  reduce using rule 161 (signed_int)


State 57

  163 signed_int: signed_longlong_int .

    $default  reduce using rule 163 (signed_int)


State 58

  160 integer_type: unsigned_int .

    $default  reduce using rule 160 (integer_type)


State 59

  168 unsigned_int: unsigned_short_int .

    $default  reduce using rule 168 (unsigned_int)


State 60

  167 unsigned_int: unsigned_long_int .

    $default  reduce using rule 167 (unsigned_int)


State 61

  169 unsigned_int: unsigned_longlong_int .

    $default  reduce using rule 169 (unsigned_int)


State 62

   82 const_type: char_type .

    $default  reduce using rule 82 (const_type)


State 63

   83 const_type: wide_char_type .

    $default  reduce using rule 83 (const_type)


State 64

   84 const_type: boolean_type .

    $default  reduce using rule 84 (const_type)


State 65

   90 const_type: octet_type .

    $default  reduce using rule 90 (const_type)


State 66

   86 const_type: string_type .

    $default  reduce using rule 86 (const_type)


State 67

   87 const_type: wide_string_type .

    $default  reduce using rule 87 (const_type)


State 68

   88 const_type: fixed_pt_const_type .

    $default  reduce using rule 88 (const_type)


State 69

  198 enum_type: T_ENUM T_IDENTIFIER . T_LEFT_CURLY_BRACKET enumerators T_RIGHT_CURLY_BRACKET

    T_LEFT_CURLY_BRACKET  shift, and go to state 129


State 70

  216 except_dcl: T_EXCEPTION T_IDENTIFIER . T_LEFT_CURLY_BRACKET members T_RIGHT_CURLY_BRACKET

    T_LEFT_CURLY_BRACKET  shift, and go to state 130


State 71

   20 forward_dcl: T_INTERFACE T_IDENTIFIER .
   22 interface_header: T_INTERFACE T_IDENTIFIER .
   23                 | T_INTERFACE T_IDENTIFIER . interface_inheritance_spec

    T_COLON  shift, and go to state 131

    T_LEFT_CURLY_BRACKET  reduce using rule 22 (interface_header)
    $default              reduce using rule 20 (forward_dcl)

    interface_inheritance_spec  go to state 132


State 72

   16 module: T_MODULE T_IDENTIFIER . $@1 T_LEFT_CURLY_BRACKET definitions $@2 T_RIGHT_CURLY_BRACKET

    $default  reduce using rule 14 ($@1)

    $@1  go to state 133


State 73

  180 struct_type: T_STRUCT T_IDENTIFIER . @3 T_LEFT_CURLY_BRACKET member_list T_RIGHT_CURLY_BRACKET

    $default  reduce using rule 179 (@3)

    @3  go to state 134


State 74

  177 any_type: T_ANY .

    $default  reduce using rule 177 (any_type)


State 75

  244 fixed_pt_type: T_FIXED . T_LESS_THAN_SIGN positive_int_const T_COMMA T_INTEGER_LITERAL T_GREATER_THAN_SIGN

    T_LESS_THAN_SIGN  shift, and go to state 135


State 76

  247 principal_type: T_PRINCIPAL .

    $default  reduce using rule 247 (principal_type)


State 77

  202 sequence_type: T_SEQUENCE . T_LESS_THAN_SIGN simple_type_spec T_COMMA positive_int_const T_GREATER_THAN_SIGN
  203              | T_SEQUENCE . T_LESS_THAN_SIGN simple_type_spec T_GREATER_THAN_SIGN

    T_LESS_THAN_SIGN  shift, and go to state 136


State 78

  178 object_type: T_OBJECT .

    $default  reduce using rule 178 (object_type)


State 79

  246 value_base_type: T_VALUEBASE .

    $default  reduce using rule 246 (value_base_type)


State 80

   41 scoped_name: scoped_name . T_SCOPE T_IDENTIFIER
  132 simple_type_spec: scoped_name .

    T_SCOPE  shift, and go to state 127

    $default  reduce using rule 132 (simple_type_spec)


State 81

  123 type_dcl: T_TYPEDEF type_spec . declarators

    T_IDENTIFIER  shift, and go to state 137

    declarators         go to state 138
    declarator          go to state 139
    simple_declarator   go to state 140
    complex_declarator  go to state 141
    array_declarator    go to state 142


State 82

  128 type_spec: simple_type_spec .

    $default  reduce using rule 128 (type_spec)


State 83

  130 simple_type_spec: base_type_spec .

    $default  reduce using rule 130 (simple_type_spec)


State 84

  131 simple_type_spec: template_type_spec .

    $default  reduce using rule 131 (simple_type_spec)


State 85

  129 type_spec: constr_type_spec .

    $default  reduce using rule 129 (type_spec)


State 86

  133 base_type_spec: floating_pt_type .

    $default  reduce using rule 133 (base_type_spec)


State 87

  134 base_type_spec: integer_type .

    $default  reduce using rule 134 (base_type_spec)


State 88

  135 base_type_spec: char_type .

    $default  reduce using rule 135 (base_type_spec)


State 89

  136 base_type_spec: wide_char_type .

    $default  reduce using rule 136 (base_type_spec)


State 90

  137 base_type_spec: boolean_type .

    $default  reduce using rule 137 (base_type_spec)


State 91

  138 base_type_spec: octet_type .

    $default  reduce using rule 138 (base_type_spec)


State 92

  139 base_type_spec: any_type .

    $default  reduce using rule 139 (base_type_spec)


State 93

  140 base_type_spec: object_type .

    $default  reduce using rule 140 (base_type_spec)


State 94

  147 constr_type_spec: struct_type .

    $default  reduce using rule 147 (constr_type_spec)


State 95

  148 constr_type_spec: union_type .

    $default  reduce using rule 148 (constr_type_spec)


State 96

  149 constr_type_spec: enum_type .

    $default  reduce using rule 149 (constr_type_spec)


State 97

  143 template_type_spec: sequence_type .

    $default  reduce using rule 143 (template_type_spec)


State 98

  144 template_type_spec: string_type .

    $default  reduce using rule 144 (template_type_spec)


State 99

  145 template_type_spec: wide_string_type .

    $default  reduce using rule 145 (template_type_spec)


State 100

  146 template_type_spec: fixed_pt_type .

    $default  reduce using rule 146 (template_type_spec)


State 101

  141 base_type_spec: value_base_type .

    $default  reduce using rule 141 (base_type_spec)


State 102

  142 base_type_spec: principal_type .

    $default  reduce using rule 142 (base_type_spec)


State 103

  185 union_type: T_UNION T_IDENTIFIER . T_SWITCH T_LEFT_PARANTHESIS switch_type_spec T_RIGHT_PARANTHESIS @4 T_LEFT_CURLY_BRACKET switch_body T_RIGHT_CURLY_BRACKET

    T_SWITCH  shift, and go to state 143


State 104

   21 forward_dcl: T_ABSTRACT T_INTERFACE . T_IDENTIFIER
   24 interface_header: T_ABSTRACT T_INTERFACE . T_IDENTIFIER
   25                 | T_ABSTRACT T_INTERFACE . T_IDENTIFIER interface_inheritance_spec

    T_IDENTIFIER  shift, and go to state 144


State 105

   47 value_forward_dcl: T_ABSTRACT T_VALUETYPE . T_IDENTIFIER
   49 value_abs_dcl: T_ABSTRACT T_VALUETYPE . T_IDENTIFIER T_LEFT_CURLY_BRACKET value_body T_RIGHT_CURLY_BRACKET
   50              | T_ABSTRACT T_VALUETYPE . T_IDENTIFIER value_inheritance_spec T_LEFT_CURLY_BRACKET value_body T_RIGHT_CURLY_BRACKET

    T_IDENTIFIER  shift, and go to state 145


State 106

   46 value_forward_dcl: T_VALUETYPE T_IDENTIFIER .
   48 value_box_dcl: T_VALUETYPE T_IDENTIFIER . type_spec
   57 value_header: T_VALUETYPE T_IDENTIFIER . value_inheritance_spec
   59             | T_VALUETYPE T_IDENTIFIER .

    T_ANY         shift, and go to state 74
    T_BOOLEAN     shift, and go to state 36
    T_CHAR        shift, and go to state 37
    T_COLON       shift, and go to state 146
    T_DOUBLE      shift, and go to state 38
    T_ENUM        shift, and go to state 3
    T_FIXED       shift, and go to state 75
    T_FLOAT       shift, and go to state 40
    T_IDENTIFIER  shift, and go to state 41
    T_LONG        shift, and go to state 42
    T_OCTET       shift, and go to state 43
    T_PRINCIPAL   shift, and go to state 76
    T_SCOPE       shift, and go to state 44
    T_SEQUENCE    shift, and go to state 77
    T_SHORT       shift, and go to state 45
    T_STRING      shift, and go to state 46
    T_STRUCT      shift, and go to state 8
    T_OBJECT      shift, and go to state 78
    T_UNION       shift, and go to state 10
    T_UNSIGNED    shift, and go to state 47
    T_WCHAR       shift, and go to state 48
    T_WSTRING     shift, and go to state 49
    T_SUPPORTS    shift, and go to state 147
    T_VALUEBASE   shift, and go to state 79

    T_LEFT_CURLY_BRACKET  reduce using rule 59 (value_header)
    $default              reduce using rule 46 (value_forward_dcl)

    scoped_name             go to state 80
    value_inheritance_spec  go to state 148
    type_spec               go to state 149
    simple_type_spec        go to state 82
    base_type_spec          go to state 83
    template_type_spec      go to state 84
    constr_type_spec        go to state 85
    floating_pt_type        go to state 86
    integer_type            go to state 87
    signed_int              go to state 54
    signed_short_int        go to state 55
    signed_long_int         go to state 56
    signed_longlong_int     go to state 57
    unsigned_int            go to state 58
    unsigned_short_int      go to state 59
    unsigned_long_int       go to state 60
    unsigned_longlong_int   go to state 61
    char_type               go to state 88
    wide_char_type          go to state 89
    boolean_type            go to state 90
    octet_type              go to state 91
    any_type                go to state 92
    object_type             go to state 93
    struct_type             go to state 94
    union_type              go to state 95
    enum_type               go to state 96
    sequence_type           go to state 97
    string_type             go to state 98
    wide_string_type        go to state 99
    fixed_pt_type           go to state 100
    value_base_type         go to state 101
    principal_type          go to state 102


State 107

   58 value_header: T_CUSTOM T_VALUETYPE . T_IDENTIFIER value_inheritance_spec
   60             | T_CUSTOM T_VALUETYPE . T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 150


State 108

  154 simple_declarator: T_IDENTIFIER .

    $default  reduce using rule 154 (simple_declarator)


State 109

  127 type_dcl: T_NATIVE simple_declarator .

    $default  reduce using rule 127 (type_dcl)


State 110

    0 $accept: specification $end .

    $default  accept


State 111

    4 definitions: definition definitions .

    $default  reduce using rule 4 (definitions)


State 112

    9 definition: module T_SEMICOLON .

    $default  reduce using rule 9 (definition)


State 113

    8 definition: interface T_SEMICOLON .

    $default  reduce using rule 8 (definition)


State 114

   19 interface_dcl: interface_header T_LEFT_CURLY_BRACKET . interface_body T_RIGHT_CURLY_BRACKET

    T_ATTRIBUTE  shift, and go to state 151
    T_CONST      shift, and go to state 2
    T_ENUM       shift, and go to state 3
    T_EXCEPTION  shift, and go to state 4
    T_ONEWAY     shift, and go to state 152
    T_READONLY   shift, and go to state 153
    T_STRUCT     shift, and go to state 8
    T_TYPEDEF    shift, and go to state 9
    T_UNION      shift, and go to state 10
    T_NATIVE     shift, and go to state 14

    T_RIGHT_CURLY_BRACKET  reduce using rule 26 (interface_body)
    $default               reduce using rule 220 (op_attribute)

    interface_body  go to state 154
    exports         go to state 155
    export          go to state 156
    const_dcl       go to state 157
    type_dcl        go to state 158
    struct_type     go to state 32
    union_type      go to state 33
    enum_type       go to state 34
    attr_dcl        go to state 159
    except_dcl      go to state 160
    op_dcl          go to state 161
    op_attribute    go to state 162


State 115

   10 definition: value T_SEMICOLON .

    $default  reduce using rule 10 (definition)


State 116

   53 value_dcl: value_header T_LEFT_CURLY_BRACKET . value_elements T_RIGHT_CURLY_BRACKET
   54          | value_header T_LEFT_CURLY_BRACKET . T_RIGHT_CURLY_BRACKET

    T_ATTRIBUTE            shift, and go to state 151
    T_CONST                shift, and go to state 2
    T_ENUM                 shift, and go to state 3
    T_EXCEPTION            shift, and go to state 4
    T_ONEWAY               shift, and go to state 152
    T_READONLY             shift, and go to state 153
    T_RIGHT_CURLY_BRACKET  shift, and go to state 163
    T_STRUCT               shift, and go to state 8
    T_TYPEDEF              shift, and go to state 9
    T_UNION                shift, and go to state 10
    T_PUBLIC               shift, and go to state 164
    T_PRIVATE              shift, and go to state 165
    T_FACTORY              shift, and go to state 166
    T_NATIVE               shift, and go to state 14

    $default  reduce using rule 220 (op_attribute)

    export          go to state 167
    value_elements  go to state 168
    value_element   go to state 169
    state_member    go to state 170
    init_dcl        go to state 171
    const_dcl       go to state 157
    type_dcl        go to state 158
    struct_type     go to state 32
    union_type      go to state 33
    enum_type       go to state 34
    attr_dcl        go to state 159
    except_dcl      go to state 160
    op_dcl          go to state 161
    op_attribute    go to state 162


State 117

    6 definition: const_dcl T_SEMICOLON .

    $default  reduce using rule 6 (definition)


State 118

    5 definition: type_dcl T_SEMICOLON .

    $default  reduce using rule 5 (definition)


State 119

    7 definition: except_dcl T_SEMICOLON .

    $default  reduce using rule 7 (definition)


State 120

  158 floating_pt_type: T_LONG T_DOUBLE .

    $default  reduce using rule 158 (floating_pt_type)


State 121

  166 signed_longlong_int: T_LONG T_LONG .

    $default  reduce using rule 166 (signed_longlong_int)


State 122

   40 scoped_name: T_SCOPE T_IDENTIFIER .

    $default  reduce using rule 40 (scoped_name)


State 123

  204 string_type: T_STRING T_LESS_THAN_SIGN . positive_int_const T_GREATER_THAN_SIGN

    T_CHARACTER_LITERAL    shift, and go to state 172
    T_FALSE                shift, and go to state 173
    T_FIXED_PT_LITERAL     shift, and go to state 174
    T_FLOATING_PT_LITERAL  shift, and go to state 175
    T_IDENTIFIER           shift, and go to state 41
    T_INTEGER_LITERAL      shift, and go to state 176
    T_LEFT_PARANTHESIS     shift, and go to state 177
    T_MINUS_SIGN           shift, and go to state 178
    T_PLUS_SIGN            shift, and go to state 179
    T_SCOPE                shift, and go to state 44
    T_STRING_LITERAL       shift, and go to state 180
    T_TILDE                shift, and go to state 181
    T_TRUE                 shift, and go to state 182

    scoped_name         go to state 183
    const_exp           go to state 184
    or_expr             go to state 185
    xor_expr            go to state 186
    and_expr            go to state 187
    shift_expr          go to state 188
    add_expr            go to state 189
    mult_expr           go to state 190
    unary_expr          go to state 191
    primary_expr        go to state 192
    literal             go to state 193
    positive_int_const  go to state 194
    T_string_literal    go to state 195


State 124

  171 unsigned_long_int: T_UNSIGNED T_LONG .
  172 unsigned_longlong_int: T_UNSIGNED T_LONG . T_LONG

    T_LONG  shift, and go to state 196

    $default  reduce using rule 171 (unsigned_long_int)


State 125

  170 unsigned_short_int: T_UNSIGNED T_SHORT .

    $default  reduce using rule 170 (unsigned_short_int)


State 126

  206 wide_string_type: T_WSTRING T_LESS_THAN_SIGN . positive_int_const T_GREATER_THAN_SIGN

    T_CHARACTER_LITERAL    shift, and go to state 172
    T_FALSE                shift, and go to state 173
    T_FIXED_PT_LITERAL     shift, and go to state 174
    T_FLOATING_PT_LITERAL  shift, and go to state 175
    T_IDENTIFIER           shift, and go to state 41
    T_INTEGER_LITERAL      shift, and go to state 176
    T_LEFT_PARANTHESIS     shift, and go to state 177
    T_MINUS_SIGN           shift, and go to state 178
    T_PLUS_SIGN            shift, and go to state 179
    T_SCOPE                shift, and go to state 44
    T_STRING_LITERAL       shift, and go to state 180
    T_TILDE                shift, and go to state 181
    T_TRUE                 shift, and go to state 182

    scoped_name         go to state 183
    const_exp           go to state 184
    or_expr             go to state 185
    xor_expr            go to state 186
    and_expr            go to state 187
    shift_expr          go to state 188
    add_expr            go to state 189
    mult_expr           go to state 190
    unary_expr          go to state 191
    primary_expr        go to state 192
    literal             go to state 193
    positive_int_const  go to state 197
    T_string_literal    go to state 195


State 127

   41 scoped_name: scoped_name T_SCOPE . T_IDENTIFIER

    T_IDENTIFIER  shift, and go to state 198


State 128

   80 const_dcl: T_CONST const_type T_IDENTIFIER . T_EQUAL const_exp

    T_EQUAL  shift, and go to state 199


State 129

  198 enum_type: T_ENUM T_IDENTIFIER T_LEFT_CURLY_BRACKET . enumerators T_RIGHT_CURLY_BRACKET

    T_IDENTIFIER  shift, and go to state 200

    enumerators  go to state 201
    enumerator   go to state 202


State 130

  216 except_dcl: T_EXCEPTION T_IDENTIFIER T_LEFT_CURLY_BRACKET . members T_RIGHT_CURLY_BRACKET

    T_ANY         shift, and go to state 74
    T_BOOLEAN     shift, and go to state 36
    T_CHAR        shift, and go to state 37
    T_DOUBLE      shift, and go to state 38
    T_ENUM        shift, and go to state 3
    T_FIXED       shift, and go to state 75
    T_FLOAT       shift, and go to state 40
    T_IDENTIFIER  shift, and go to state 41
    T_LONG        shift, and go to state 42
    T_OCTET       shift, and go to state 43
    T_PRINCIPAL   shift, and go to state 76
    T_SCOPE       shift, and go to state 44
    T_SEQUENCE    shift, and go to state 77
    T_SHORT       shift, and go to state 45
    T_STRING      shift, and go to state 46
    T_STRUCT      shift, and go to state 8
    T_OBJECT      shift, and go to state 78
    T_UNION       shift, and go to state 10
    T_UNSIGNED    shift, and go to state 47
    T_WCHAR       shift, and go to state 48
    T_WSTRING     shift, and go to state 49
    T_VALUEBASE   shift, and go to state 79

    $default  reduce using rule 217 (members)

    scoped_name            go to state 80
    type_spec              go to state 203
    simple_type_spec       go to state 82
    base_type_spec         go to state 83
    template_type_spec     go to state 84
    constr_type_spec       go to state 85
    floating_pt_type       go to state 86
    integer_type           go to state 87
    signed_int             go to state 54
    signed_short_int       go to state 55
    signed_long_int        go to state 56
    signed_longlong_int    go to state 57
    unsigned_int           go to state 58
    unsigned_short_int     go to state 59
    unsigned_long_int      go to state 60
    unsigned_longlong_int  go to state 61
    char_type              go to state 88
    wide_char_type         go to state 89
    boolean_type           go to state 90
    octet_type             go to state 91
    any_type               go to state 92
    object_type            go to state 93
    struct_type            go to state 94
    member                 go to state 204
    union_type             go to state 95
    enum_type              go to state 96
    sequence_type          go to state 97
    string_type            go to state 98
    wide_string_type       go to state 99
    members                go to state 205
    fixed_pt_type          go to state 100
    value_base_type        go to state 101
    principal_type         go to state 102


State 131

   35 interface_inheritance_spec: T_COLON . interface_names

    T_IDENTIFIER  shift, and go to state 41
    T_SCOPE       shift, and go to state 44

    interface_names  go to state 206
    scoped_names     go to state 207
    scoped_name      go to state 208


State 132

   23 interface_header: T_INTERFACE T_IDENTIFIER interface_inheritance_spec .

    $default  reduce using rule 23 (interface_header)


State 133

   16 module: T_MODULE T_IDENTIFIER $@1 . T_LEFT_CURLY_BRACKET definitions $@2 T_RIGHT_CURLY_BRACKET

    T_LEFT_CURLY_BRACKET  shift, and go to state 209


State 134

  180 struct_type: T_STRUCT T_IDENTIFIER @3 . T_LEFT_CURLY_BRACKET member_list T_RIGHT_CURLY_BRACKET

    T_LEFT_CURLY_BRACKET  shift, and go to state 210


State 135

  244 fixed_pt_type: T_FIXED T_LESS_THAN_SIGN . positive_int_const T_COMMA T_INTEGER_LITERAL T_GREATER_THAN_SIGN

    T_CHARACTER_LITERAL    shift, and go to state 172
    T_FALSE                shift, and go to state 173
    T_FIXED_PT_LITERAL     shift, and go to state 174
    T_FLOATING_PT_LITERAL  shift, and go to state 175
    T_IDENTIFIER           shift, and go to state 41
    T_INTEGER_LITERAL      shift, and go to state 176
    T_LEFT_PARANTHESIS     shift, and go to state 177
    T_MINUS_SIGN           shift, and go to state 178
    T_PLUS_SIGN            shift, and go to state 179
    T_SCOPE                shift, and go to state 44
    T_STRING_LITERAL       shift, and go to state 180
    T_TILDE                shift, and go to state 181
    T_TRUE                 shift, and go to state 182

    scoped_name         go to state 183
    const_exp           go to state 184
    or_expr             go to state 185
    xor_expr            go to state 186
    and_expr            go to state 187
    shift_expr          go to state 188
    add_expr            go to state 189
    mult_expr           go to state 190
    unary_expr          go to state 191
    primary_expr        go to state 192
    literal             go to state 193
    positive_int_const  go to state 211
    T_string_literal    go to state 195


State 136

  202 sequence_type: T_SEQUENCE T_LESS_THAN_SIGN . simple_type_spec T_COMMA positive_int_const T_GREATER_THAN_SIGN
  203              | T_SEQUENCE T_LESS_THAN_SIGN . simple_type_spec T_GREATER_THAN_SIGN

    T_ANY         shift, and go to state 74
    T_BOOLEAN     shift, and go to state 36
    T_CHAR        shift, and go to state 37
    T_DOUBLE      shift, and go to state 38
    T_FIXED       shift, and go to state 75
    T_FLOAT       shift, and go to state 40
    T_IDENTIFIER  shift, and go to state 41
    T_LONG        shift, and go to state 42
    T_OCTET       shift, and go to state 43
    T_PRINCIPAL   shift, and go to state 76
    T_SCOPE       shift, and go to state 44
    T_SEQUENCE    shift, and go to state 77
    T_SHORT       shift, and go to state 45
    T_STRING      shift, and go to state 46
    T_OBJECT      shift, and go to state 78
    T_UNSIGNED    shift, and go to state 47
    T_WCHAR       shift, and go to state 48
    T_WSTRING     shift, and go to state 49
    T_VALUEBASE   shift, and go to state 79

    scoped_name            go to state 80
    simple_type_spec       go to state 212
    base_type_spec         go to state 83
    template_type_spec     go to state 84
    floating_pt_type       go to state 86
    integer_type           go to state 87
    signed_int             go to state 54
    signed_short_int       go to state 55
    signed_long_int        go to state 56
    signed_longlong_int    go to state 57
    unsigned_int           go to state 58
    unsigned_short_int     go to state 59
    unsigned_long_int      go to state 60
    unsigned_longlong_int  go to state 61
    char_type              go to state 88
    wide_char_type         go to state 89
    boolean_type           go to state 90
    octet_type             go to state 91
    any_type               go to state 92
    object_type            go to state 93
    sequence_type          go to state 97
    string_type            go to state 98
    wide_string_type       go to state 99
    fixed_pt_type          go to state 100
    value_base_type        go to state 101
    principal_type         go to state 102


State 137

  154 simple_declarator: T_IDENTIFIER .
  208 array_declarator: T_IDENTIFIER . fixed_array_sizes

    T_LEFT_SQUARE_BRACKET  shift, and go to state 213

    $default  reduce using rule 154 (simple_declarator)

    fixed_array_sizes  go to state 214
    fixed_array_size   go to state 215


State 138

  123 type_dcl: T_TYPEDEF type_spec declarators .

    $default  reduce using rule 123 (type_dcl)


State 139

  150 declarators: declarator .
  151            | declarator . T_COMMA declarators

    T_COMMA  shift, and go to state 216

    $default  reduce using rule 150 (declarators)


State 140

  152 declarator: simple_declarator .

    $default  reduce using rule 152 (declarator)


State 141

  153 declarator: complex_declarator .

    $default  reduce using rule 153 (declarator)


State 142

  155 complex_declarator: array_declarator .

    $default  reduce using rule 155 (complex_declarator)


State 143

  185 union_type: T_UNION T_IDENTIFIER T_SWITCH . T_LEFT_PARANTHESIS switch_type_spec T_RIGHT_PARANTHESIS @4 T_LEFT_CURLY_BRACKET switch_body T_RIGHT_CURLY_BRACKET

    T_LEFT_PARANTHESIS  shift, and go to state 217


State 144

   21 forward_dcl: T_ABSTRACT T_INTERFACE T_IDENTIFIER .
   24 interface_header: T_ABSTRACT T_INTERFACE T_IDENTIFIER .
   25                 | T_ABSTRACT T_INTERFACE T_IDENTIFIER . interface_inheritance_spec

    T_COLON  shift, and go to state 131

    T_LEFT_CURLY_BRACKET  reduce using rule 24 (interface_header)
    $default              reduce using rule 21 (forward_dcl)

    interface_inheritance_spec  go to state 218


State 145

   47 value_forward_dcl: T_ABSTRACT T_VALUETYPE T_IDENTIFIER .
   49 value_abs_dcl: T_ABSTRACT T_VALUETYPE T_IDENTIFIER . T_LEFT_CURLY_BRACKET value_body T_RIGHT_CURLY_BRACKET
   50              | T_ABSTRACT T_VALUETYPE T_IDENTIFIER . value_inheritance_spec T_LEFT_CURLY_BRACKET value_body T_RIGHT_CURLY_BRACKET

    T_COLON               shift, and go to state 146
    T_LEFT_CURLY_BRACKET  shift, and go to state 219
    T_SUPPORTS            shift, and go to state 147

    $default  reduce using rule 47 (value_forward_dcl)

    value_inheritance_spec  go to state 220


State 146

   61 value_inheritance_spec: T_COLON . value_inheritance_bases
   62                       | T_COLON . value_inheritance_bases T_SUPPORTS interface_names

    T_IDENTIFIER   shift, and go to state 41
    T_SCOPE        shift, and go to state 44
    T_TRUNCATABLE  shift, and go to state 221

    scoped_name              go to state 222
    value_inheritance_bases  go to state 223
    value_name               go to state 224


State 147

   63 value_inheritance_spec: T_SUPPORTS . interface_names

    T_IDENTIFIER  shift, and go to state 41
    T_SCOPE       shift, and go to state 44

    interface_names  go to state 225
    scoped_names     go to state 207
    scoped_name      go to state 208


State 148

   57 value_header: T_VALUETYPE T_IDENTIFIER value_inheritance_spec .

    $default  reduce using rule 57 (value_header)


State 149

   48 value_box_dcl: T_VALUETYPE T_IDENTIFIER type_spec .

    $default  reduce using rule 48 (value_box_dcl)


State 150

   58 value_header: T_CUSTOM T_VALUETYPE T_IDENTIFIER . value_inheritance_spec
   60             | T_CUSTOM T_VALUETYPE T_IDENTIFIER .

    T_COLON     shift, and go to state 146
    T_SUPPORTS  shift, and go to state 147

    $default  reduce using rule 60 (value_header)

    value_inheritance_spec  go to state 226


State 151

  212 attr_dcl: T_ATTRIBUTE . param_type_spec simple_declarators

    T_ANY         shift, and go to state 74
    T_BOOLEAN     shift, and go to state 36
    T_CHAR        shift, and go to state 37
    T_DOUBLE      shift, and go to state 38
    T_FLOAT       shift, and go to state 40
    T_IDENTIFIER  shift, and go to state 41
    T_LONG        shift, and go to state 42
    T_OCTET       shift, and go to state 43
    T_PRINCIPAL   shift, and go to state 76
    T_SCOPE       shift, and go to state 44
    T_SHORT       shift, and go to state 45
    T_STRING      shift, and go to state 46
    T_OBJECT      shift, and go to state 78
    T_UNSIGNED    shift, and go to state 47
    T_WCHAR       shift, and go to state 48
    T_WSTRING     shift, and go to state 49
    T_VALUEBASE   shift, and go to state 79

    scoped_name            go to state 227
    base_type_spec         go to state 228
    floating_pt_type       go to state 86
    integer_type           go to state 87
    signed_int             go to state 54
    signed_short_int       go to state 55
    signed_long_int        go to state 56
    signed_longlong_int    go to state 57
    unsigned_int           go to state 58
    unsigned_short_int     go to state 59
    unsigned_long_int      go to state 60
    unsigned_longlong_int  go to state 61
    char_type              go to state 88
    wide_char_type         go to state 89
    boolean_type           go to state 90
    octet_type             go to state 91
    any_type               go to state 92
    object_type            go to state 93
    string_type            go to state 229
    wide_string_type       go to state 230
    param_type_spec        go to state 231
    value_base_type        go to state 101
    principal_type         go to state 102


State 152

  221 op_attribute: T_ONEWAY .

    $default  reduce using rule 221 (op_attribute)


State 153

  213 attr_dcl: T_READONLY . T_ATTRIBUTE param_type_spec simple_declarators

    T_ATTRIBUTE  shift, and go to state 232


State 154

   19 interface_dcl: interface_header T_LEFT_CURLY_BRACKET interface_body . T_RIGHT_CURLY_BRACKET

    T_RIGHT_CURLY_BRACKET  shift, and go to state 233


State 155

   27 interface_body: exports .

    $default  reduce using rule 27 (interface_body)


State 156

   28 exports: export .
   29        | export . exports

    T_ATTRIBUTE  shift, and go to state 151
    T_CONST      shift, and go to state 2
    T_ENUM       shift, and go to state 3
    T_EXCEPTION  shift, and go to state 4
    T_ONEWAY     shift, and go to state 152
    T_READONLY   shift, and go to state 153
    T_STRUCT     shift, and go to state 8
    T_TYPEDEF    shift, and go to state 9
    T_UNION      shift, and go to state 10
    T_NATIVE     shift, and go to state 14

    T_RIGHT_CURLY_BRACKET  reduce using rule 28 (exports)
    $default               reduce using rule 220 (op_attribute)

    exports       go to state 234
    export        go to state 156
    const_dcl     go to state 157
    type_dcl      go to state 158
    struct_type   go to state 32
    union_type    go to state 33
    enum_type     go to state 34
    attr_dcl      go to state 159
    except_dcl    go to state 160
    op_dcl        go to state 161
    op_attribute  go to state 162


State 157

   31 export: const_dcl . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 235


State 158

   30 export: type_dcl . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 236


State 159

   33 export: attr_dcl . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 237


State 160

   32 export: except_dcl . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 238


State 161

   34 export: op_dcl . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 239


State 162

  219 op_dcl: op_attribute . op_type_spec T_IDENTIFIER parameter_dcls raises_expr context_expr

    T_ANY         shift, and go to state 74
    T_BOOLEAN     shift, and go to state 36
    T_CHAR        shift, and go to state 37
    T_DOUBLE      shift, and go to state 38
    T_FLOAT       shift, and go to state 40
    T_IDENTIFIER  shift, and go to state 41
    T_LONG        shift, and go to state 42
    T_OCTET       shift, and go to state 43
    T_PRINCIPAL   shift, and go to state 76
    T_SCOPE       shift, and go to state 44
    T_SHORT       shift, and go to state 45
    T_STRING      shift, and go to state 46
    T_OBJECT      shift, and go to state 78
    T_UNSIGNED    shift, and go to state 47
    T_VOID        shift, and go to state 240
    T_WCHAR       shift, and go to state 48
    T_WSTRING     shift, and go to state 49
    T_VALUEBASE   shift, and go to state 79

    scoped_name            go to state 227
    base_type_spec         go to state 228
    floating_pt_type       go to state 86
    integer_type           go to state 87
    signed_int             go to state 54
    signed_short_int       go to state 55
    signed_long_int        go to state 56
    signed_longlong_int    go to state 57
    unsigned_int           go to state 58
    unsigned_short_int     go to state 59
    unsigned_long_int      go to state 60
    unsigned_longlong_int  go to state 61
    char_type              go to state 88
    wide_char_type         go to state 89
    boolean_type           go to state 90
    octet_type             go to state 91
    any_type               go to state 92
    object_type            go to state 93
    string_type            go to state 229
    wide_string_type       go to state 230
    op_type_spec           go to state 241
    param_type_spec        go to state 242
    value_base_type        go to state 101
    principal_type         go to state 102


State 163

   54 value_dcl: value_header T_LEFT_CURLY_BRACKET T_RIGHT_CURLY_BRACKET .

    $default  reduce using rule 54 (value_dcl)


State 164

   73 state_member: T_PUBLIC . type_spec declarators T_SEMICOLON

    T_ANY         shift, and go to state 74
    T_BOOLEAN     shift, and go to state 36
    T_CHAR        shift, and go to state 37
    T_DOUBLE      shift, and go to state 38
    T_ENUM        shift, and go to state 3
    T_FIXED       shift, and go to state 75
    T_FLOAT       shift, and go to state 40
    T_IDENTIFIER  shift, and go to state 41
    T_LONG        shift, and go to state 42
    T_OCTET       shift, and go to state 43
    T_PRINCIPAL   shift, and go to state 76
    T_SCOPE       shift, and go to state 44
    T_SEQUENCE    shift, and go to state 77
    T_SHORT       shift, and go to state 45
    T_STRING      shift, and go to state 46
    T_STRUCT      shift, and go to state 8
    T_OBJECT      shift, and go to state 78
    T_UNION       shift, and go to state 10
    T_UNSIGNED    shift, and go to state 47
    T_WCHAR       shift, and go to state 48
    T_WSTRING     shift, and go to state 49
    T_VALUEBASE   shift, and go to state 79

    scoped_name            go to state 80
    type_spec              go to state 243
    simple_type_spec       go to state 82
    base_type_spec         go to state 83
    template_type_spec     go to state 84
    constr_type_spec       go to state 85
    floating_pt_type       go to state 86
    integer_type           go to state 87
    signed_int             go to state 54
    signed_short_int       go to state 55
    signed_long_int        go to state 56
    signed_longlong_int    go to state 57
    unsigned_int           go to state 58
    unsigned_short_int     go to state 59
    unsigned_long_int      go to state 60
    unsigned_longlong_int  go to state 61
    char_type              go to state 88
    wide_char_type         go to state 89
    boolean_type           go to state 90
    octet_type             go to state 91
    any_type               go to state 92
    object_type            go to state 93
    struct_type            go to state 94
    union_type             go to state 95
    enum_type              go to state 96
    sequence_type          go to state 97
    string_type            go to state 98
    wide_string_type       go to state 99
    fixed_pt_type          go to state 100
    value_base_type        go to state 101
    principal_type         go to state 102


State 165

   74 state_member: T_PRIVATE . type_spec declarators T_SEMICOLON

    T_ANY         shift, and go to state 74
    T_BOOLEAN     shift, and go to state 36
    T_CHAR        shift, and go to state 37
    T_DOUBLE      shift, and go to state 38
    T_ENUM        shift, and go to state 3
    T_FIXED       shift, and go to state 75
    T_FLOAT       shift, and go to state 40
    T_IDENTIFIER  shift, and go to state 41
    T_LONG        shift, and go to state 42
    T_OCTET       shift, and go to state 43
    T_PRINCIPAL   shift, and go to state 76
    T_SCOPE       shift, and go to state 44
    T_SEQUENCE    shift, and go to state 77
    T_SHORT       shift, and go to state 45
    T_STRING      shift, and go to state 46
    T_STRUCT      shift, and go to state 8
    T_OBJECT      shift, and go to state 78
    T_UNION       shift, and go to state 10
    T_UNSIGNED    shift, and go to state 47
    T_WCHAR       shift, and go to state 48
    T_WSTRING     shift, and go to state 49
    T_VALUEBASE   shift, and go to state 79

    scoped_name            go to state 80
    type_spec              go to state 244
    simple_type_spec       go to state 82
    base_type_spec         go to state 83
    template_type_spec     go to state 84
    constr_type_spec       go to state 85
    floating_pt_type       go to state 86
    integer_type           go to state 87
    signed_int             go to state 54
    signed_short_int       go to state 55
    signed_long_int        go to state 56
    signed_longlong_int    go to state 57
    unsigned_int           go to state 58
    unsigned_short_int     go to state 59
    unsigned_long_int      go to state 60
    unsigned_longlong_int  go to state 61
    char_type              go to state 88
    wide_char_type         go to state 89
    boolean_type           go to state 90
    octet_type             go to state 91
    any_type               go to state 92
    object_type            go to state 93
    struct_type            go to state 94
    union_type             go to state 95
    enum_type              go to state 96
    sequence_type          go to state 97
    string_type            go to state 98
    wide_string_type       go to state 99
    fixed_pt_type          go to state 100
    value_base_type        go to state 101
    principal_type         go to state 102


State 166

   75 init_dcl: T_FACTORY . T_IDENTIFIER T_LEFT_PARANTHESIS init_param_decls T_RIGHT_PARANTHESIS T_SEMICOLON

    T_IDENTIFIER  shift, and go to state 245


State 167

   70 value_element: export .

    $default  reduce using rule 70 (value_element)


State 168

   53 value_dcl: value_header T_LEFT_CURLY_BRACKET value_elements . T_RIGHT_CURLY_BRACKET

    T_RIGHT_CURLY_BRACKET  shift, and go to state 246


State 169

   55 value_elements: value_element .
   56               | value_element . value_elements

    T_ATTRIBUTE  shift, and go to state 151
    T_CONST      shift, and go to state 2
    T_ENUM       shift, and go to state 3
    T_EXCEPTION  shift, and go to state 4
    T_ONEWAY     shift, and go to state 152
    T_READONLY   shift, and go to state 153
    T_STRUCT     shift, and go to state 8
    T_TYPEDEF    shift, and go to state 9
    T_UNION      shift, and go to state 10
    T_PUBLIC     shift, and go to state 164
    T_PRIVATE    shift, and go to state 165
    T_FACTORY    shift, and go to state 166
    T_NATIVE     shift, and go to state 14

    T_RIGHT_CURLY_BRACKET  reduce using rule 55 (value_elements)
    $default               reduce using rule 220 (op_attribute)

    export          go to state 167
    value_elements  go to state 247
    value_element   go to state 169
    state_member    go to state 170
    init_dcl        go to state 171
    const_dcl       go to state 157
    type_dcl        go to state 158
    struct_type     go to state 32
    union_type      go to state 33
    enum_type       go to state 34
    attr_dcl        go to state 159
    except_dcl      go to state 160
    op_dcl          go to state 161
    op_attribute    go to state 162


State 170

   71 value_element: state_member .

    $default  reduce using rule 71 (value_element)


State 171

   72 value_element: init_dcl .

    $default  reduce using rule 72 (value_element)


State 172

  117 literal: T_CHARACTER_LITERAL .

    $default  reduce using rule 117 (literal)


State 173

  121 literal: T_FALSE .

    $default  reduce using rule 121 (literal)


State 174

  118 literal: T_FIXED_PT_LITERAL .

    $default  reduce using rule 118 (literal)


State 175

  119 literal: T_FLOATING_PT_LITERAL .

    $default  reduce using rule 119 (literal)


State 176

  115 literal: T_INTEGER_LITERAL .

    $default  reduce using rule 115 (literal)


State 177

  114 primary_expr: T_LEFT_PARANTHESIS . const_exp T_RIGHT_PARANTHESIS

    T_CHARACTER_LITERAL    shift, and go to state 172
    T_FALSE                shift, and go to state 173
    T_FIXED_PT_LITERAL     shift, and go to state 174
    T_FLOATING_PT_LITERAL  shift, and go to state 175
    T_IDENTIFIER           shift, and go to state 41
    T_INTEGER_LITERAL      shift, and go to state 176
    T_LEFT_PARANTHESIS     shift, and go to state 177
    T_MINUS_SIGN           shift, and go to state 178
    T_PLUS_SIGN            shift, and go to state 179
    T_SCOPE                shift, and go to state 44
    T_STRING_LITERAL       shift, and go to state 180
    T_TILDE                shift, and go to state 181
    T_TRUE                 shift, and go to state 182

    scoped_name       go to state 183
    const_exp         go to state 248
    or_expr           go to state 185
    xor_expr          go to state 186
    and_expr          go to state 187
    shift_expr        go to state 188
    add_expr          go to state 189
    mult_expr         go to state 190
    unary_expr        go to state 191
    primary_expr      go to state 192
    literal           go to state 193
    T_string_literal  go to state 195


State 178

  108 unary_expr: T_MINUS_SIGN . primary_expr

    T_CHARACTER_LITERAL    shift, and go to state 172
    T_FALSE                shift, and go to state 173
    T_FIXED_PT_LITERAL     shift, and go to state 174
    T_FLOATING_PT_LITERAL  shift, and go to state 175
    T_IDENTIFIER           shift, and go to state 41
    T_INTEGER_LITERAL      shift, and go to state 176
    T_LEFT_PARANTHESIS     shift, and go to state 177
    T_SCOPE                shift, and go to state 44
    T_STRING_LITERAL       shift, and go to state 180
    T_TRUE                 shift, and go to state 182

    scoped_name       go to state 183
    primary_expr      go to state 249
    literal           go to state 193
    T_string_literal  go to state 195


State 179

  109 unary_expr: T_PLUS_SIGN . primary_expr

    T_CHARACTER_LITERAL    shift, and go to state 172
    T_FALSE                shift, and go to state 173
    T_FIXED_PT_LITERAL     shift, and go to state 174
    T_FLOATING_PT_LITERAL  shift, and go to state 175
    T_IDENTIFIER           shift, and go to state 41
    T_INTEGER_LITERAL      shift, and go to state 176
    T_LEFT_PARANTHESIS     shift, and go to state 177
    T_SCOPE                shift, and go to state 44
    T_STRING_LITERAL       shift, and go to state 180
    T_TRUE                 shift, and go to state 182

    scoped_name       go to state 183
    primary_expr      go to state 250
    literal           go to state 193
    T_string_literal  go to state 195


State 180

  238 T_string_literal: T_STRING_LITERAL .
  239                 | T_STRING_LITERAL . T_string_literal

    T_STRING_LITERAL  shift, and go to state 180

    $default  reduce using rule 238 (T_string_literal)

    T_string_literal  go to state 251


State 181

  110 unary_expr: T_TILDE . primary_expr

    T_CHARACTER_LITERAL    shift, and go to state 172
    T_FALSE                shift, and go to state 173
    T_FIXED_PT_LITERAL     shift, and go to state 174
    T_FLOATING_PT_LITERAL  shift, and go to state 175
    T_IDENTIFIER           shift, and go to state 41
    T_INTEGER_LITERAL      shift, and go to state 176
    T_LEFT_PARANTHESIS     shift, and go to state 177
    T_SCOPE                shift, and go to state 44
    T_STRING_LITERAL       shift, and go to state 180
    T_TRUE                 shift, and go to state 182

    scoped_name       go to state 183
    primary_expr      go to state 252
    literal           go to state 193
    T_string_literal  go to state 195


State 182

  120 literal: T_TRUE .

    $default  reduce using rule 120 (literal)


State 183

   41 scoped_name: scoped_name . T_SCOPE T_IDENTIFIER
  112 primary_expr: scoped_name .

    T_SCOPE  shift, and go to state 127

    $default  reduce using rule 112 (primary_expr)


State 184

  122 positive_int_const: const_exp .

    $default  reduce using rule 122 (positive_int_const)


State 185

   91 const_exp: or_expr .
   93 or_expr: or_expr . T_VERTICAL_LINE xor_expr

    T_VERTICAL_LINE  shift, and go to state 253

    $default  reduce using rule 91 (const_exp)


State 186

   92 or_expr: xor_expr .
   95 xor_expr: xor_expr . T_CIRCUMFLEX and_expr

    T_CIRCUMFLEX  shift, and go to state 254

    $default  reduce using rule 92 (or_expr)


State 187

   94 xor_expr: and_expr .
   97 and_expr: and_expr . T_AMPERSAND shift_expr

    T_AMPERSAND  shift, and go to state 255

    $default  reduce using rule 94 (xor_expr)


State 188

   96 and_expr: shift_expr .
   99 shift_expr: shift_expr . T_SHIFTRIGHT add_expr
  100           | shift_expr . T_SHIFTLEFT add_expr

    T_SHIFTLEFT   shift, and go to state 256
    T_SHIFTRIGHT  shift, and go to state 257

    $default  reduce using rule 96 (and_expr)


State 189

   98 shift_expr: add_expr .
  102 add_expr: add_expr . T_PLUS_SIGN mult_expr
  103         | add_expr . T_MINUS_SIGN mult_expr

    T_MINUS_SIGN  shift, and go to state 258
    T_PLUS_SIGN   shift, and go to state 259

    $default  reduce using rule 98 (shift_expr)


State 190

  101 add_expr: mult_expr .
  105 mult_expr: mult_expr . T_ASTERISK unary_expr
  106          | mult_expr . T_SOLIDUS unary_expr
  107          | mult_expr . T_PERCENT_SIGN unary_expr

    T_ASTERISK      shift, and go to state 260
    T_PERCENT_SIGN  shift, and go to state 261
    T_SOLIDUS       shift, and go to state 262

    $default  reduce using rule 101 (add_expr)


State 191

  104 mult_expr: unary_expr .

    $default  reduce using rule 104 (mult_expr)


State 192

  111 unary_expr: primary_expr .

    $default  reduce using rule 111 (unary_expr)


State 193

  113 primary_expr: literal .

    $default  reduce using rule 113 (primary_expr)


State 194

  204 string_type: T_STRING T_LESS_THAN_SIGN positive_int_const . T_GREATER_THAN_SIGN

    T_GREATER_THAN_SIGN  shift, and go to state 263


State 195

  116 literal: T_string_literal .

    $default  reduce using rule 116 (literal)


State 196

  172 unsigned_longlong_int: T_UNSIGNED T_LONG T_LONG .

    $default  reduce using rule 172 (unsigned_longlong_int)


State 197

  206 wide_string_type: T_WSTRING T_LESS_THAN_SIGN positive_int_const . T_GREATER_THAN_SIGN

    T_GREATER_THAN_SIGN  shift, and go to state 264


State 198

   41 scoped_name: scoped_name T_SCOPE T_IDENTIFIER .

    $default  reduce using rule 41 (scoped_name)


State 199

   80 const_dcl: T_CONST const_type T_IDENTIFIER T_EQUAL . const_exp

    T_CHARACTER_LITERAL    shift, and go to state 172
    T_FALSE                shift, and go to state 173
    T_FIXED_PT_LITERAL     shift, and go to state 174
    T_FLOATING_PT_LITERAL  shift, and go to state 175
    T_IDENTIFIER           shift, and go to state 41
    T_INTEGER_LITERAL      shift, and go to state 176
    T_LEFT_PARANTHESIS     shift, and go to state 177
    T_MINUS_SIGN           shift, and go to state 178
    T_PLUS_SIGN            shift, and go to state 179
    T_SCOPE                shift, and go to state 44
    T_STRING_LITERAL       shift, and go to state 180
    T_TILDE                shift, and go to state 181
    T_TRUE                 shift, and go to state 182

    scoped_name       go to state 183
    const_exp         go to state 265
    or_expr           go to state 185
    xor_expr          go to state 186
    and_expr          go to state 187
    shift_expr        go to state 188
    add_expr          go to state 189
    mult_expr         go to state 190
    unary_expr        go to state 191
    primary_expr      go to state 192
    literal           go to state 193
    T_string_literal  go to state 195


State 200

  201 enumerator: T_IDENTIFIER .

    $default  reduce using rule 201 (enumerator)


State 201

  198 enum_type: T_ENUM T_IDENTIFIER T_LEFT_CURLY_BRACKET enumerators . T_RIGHT_CURLY_BRACKET

    T_RIGHT_CURLY_BRACKET  shift, and go to state 266


State 202

  199 enumerators: enumerator .
  200            | enumerator . T_COMMA enumerators

    T_COMMA  shift, and go to state 267

    $default  reduce using rule 199 (enumerators)


State 203

  183 member: type_spec . declarators T_SEMICOLON

    T_IDENTIFIER  shift, and go to state 137

    declarators         go to state 268
    declarator          go to state 139
    simple_declarator   go to state 140
    complex_declarator  go to state 141
    array_declarator    go to state 142


State 204

  218 members: member . members

    T_ANY         shift, and go to state 74
    T_BOOLEAN     shift, and go to state 36
    T_CHAR        shift, and go to state 37
    T_DOUBLE      shift, and go to state 38
    T_ENUM        shift, and go to state 3
    T_FIXED       shift, and go to state 75
    T_FLOAT       shift, and go to state 40
    T_IDENTIFIER  shift, and go to state 41
    T_LONG        shift, and go to state 42
    T_OCTET       shift, and go to state 43
    T_PRINCIPAL   shift, and go to state 76
    T_SCOPE       shift, and go to state 44
    T_SEQUENCE    shift, and go to state 77
    T_SHORT       shift, and go to state 45
    T_STRING      shift, and go to state 46
    T_STRUCT      shift, and go to state 8
    T_OBJECT      shift, and go to state 78
    T_UNION       shift, and go to state 10
    T_UNSIGNED    shift, and go to state 47
    T_WCHAR       shift, and go to state 48
    T_WSTRING     shift, and go to state 49
    T_VALUEBASE   shift, and go to state 79

    $default  reduce using rule 217 (members)

    scoped_name            go to state 80
    type_spec              go to state 203
    simple_type_spec       go to state 82
    base_type_spec         go to state 83
    template_type_spec     go to state 84
    constr_type_spec       go to state 85
    floating_pt_type       go to state 86
    integer_type           go to state 87
    signed_int             go to state 54
    signed_short_int       go to state 55
    signed_long_int        go to state 56
    signed_longlong_int    go to state 57
    unsigned_int           go to state 58
    unsigned_short_int     go to state 59
    unsigned_long_int      go to state 60
    unsigned_longlong_int  go to state 61
    char_type              go to state 88
    wide_char_type         go to state 89
    boolean_type           go to state 90
    octet_type             go to state 91
    any_type               go to state 92
    object_type            go to state 93
    struct_type            go to state 94
    member                 go to state 204
    union_type             go to state 95
    enum_type              go to state 96
    sequence_type          go to state 97
    string_type            go to state 98
    wide_string_type       go to state 99
    members                go to state 269
    fixed_pt_type          go to state 100
    value_base_type        go to state 101
    principal_type         go to state 102


State 205

  216 except_dcl: T_EXCEPTION T_IDENTIFIER T_LEFT_CURLY_BRACKET members . T_RIGHT_CURLY_BRACKET

    T_RIGHT_CURLY_BRACKET  shift, and go to state 270


State 206

   35 interface_inheritance_spec: T_COLON interface_names .

    $default  reduce using rule 35 (interface_inheritance_spec)


State 207

   36 interface_names: scoped_names .

    $default  reduce using rule 36 (interface_names)


State 208

   37 scoped_names: scoped_name .
   38             | scoped_name . T_COMMA scoped_names
   41 scoped_name: scoped_name . T_SCOPE T_IDENTIFIER

    T_COMMA  shift, and go to state 271
    T_SCOPE  shift, and go to state 127

    $default  reduce using rule 37 (scoped_names)


State 209

   16 module: T_MODULE T_IDENTIFIER $@1 T_LEFT_CURLY_BRACKET . definitions $@2 T_RIGHT_CURLY_BRACKET

    error        shift, and go to state 1
    T_CONST      shift, and go to state 2
    T_ENUM       shift, and go to state 3
    T_EXCEPTION  shift, and go to state 4
    T_INTERFACE  shift, and go to state 5
    T_MODULE     shift, and go to state 6
    T_PRAGMA     shift, and go to state 7
    T_STRUCT     shift, and go to state 8
    T_TYPEDEF    shift, and go to state 9
    T_UNION      shift, and go to state 10
    T_ABSTRACT   shift, and go to state 11
    T_VALUETYPE  shift, and go to state 12
    T_CUSTOM     shift, and go to state 13
    T_NATIVE     shift, and go to state 14

    definitions        go to state 272
    definition         go to state 17
    pragma             go to state 18
    module             go to state 19
    interface          go to state 20
    interface_dcl      go to state 21
    forward_dcl        go to state 22
    interface_header   go to state 23
    value              go to state 24
    value_forward_dcl  go to state 25
    value_box_dcl      go to state 26
    value_abs_dcl      go to state 27
    value_dcl          go to state 28
    value_header       go to state 29
    const_dcl          go to state 30
    type_dcl           go to state 31
    struct_type        go to state 32
    union_type         go to state 33
    enum_type          go to state 34
    except_dcl         go to state 35


State 210

  180 struct_type: T_STRUCT T_IDENTIFIER @3 T_LEFT_CURLY_BRACKET . member_list T_RIGHT_CURLY_BRACKET

    T_ANY         shift, and go to state 74
    T_BOOLEAN     shift, and go to state 36
    T_CHAR        shift, and go to state 37
    T_DOUBLE      shift, and go to state 38
    T_ENUM        shift, and go to state 3
    T_FIXED       shift, and go to state 75
    T_FLOAT       shift, and go to state 40
    T_IDENTIFIER  shift, and go to state 41
    T_LONG        shift, and go to state 42
    T_OCTET       shift, and go to state 43
    T_PRINCIPAL   shift, and go to state 76
    T_SCOPE       shift, and go to state 44
    T_SEQUENCE    shift, and go to state 77
    T_SHORT       shift, and go to state 45
    T_STRING      shift, and go to state 46
    T_STRUCT      shift, and go to state 8
    T_OBJECT      shift, and go to state 78
    T_UNION       shift, and go to state 10
    T_UNSIGNED    shift, and go to state 47
    T_WCHAR       shift, and go to state 48
    T_WSTRING     shift, and go to state 49
    T_VALUEBASE   shift, and go to state 79

    scoped_name            go to state 80
    type_spec              go to state 203
    simple_type_spec       go to state 82
    base_type_spec         go to state 83
    template_type_spec     go to state 84
    constr_type_spec       go to state 85
    floating_pt_type       go to state 86
    integer_type           go to state 87
    signed_int             go to state 54
    signed_short_int       go to state 55
    signed_long_int        go to state 56
    signed_longlong_int    go to state 57
    unsigned_int           go to state 58
    unsigned_short_int     go to state 59
    unsigned_long_int      go to state 60
    unsigned_longlong_int  go to state 61
    char_type              go to state 88
    wide_char_type         go to state 89
    boolean_type           go to state 90
    octet_type             go to state 91
    any_type               go to state 92
    object_type            go to state 93
    struct_type            go to state 94
    member_list            go to state 273
    member                 go to state 274
    union_type             go to state 95
    enum_type              go to state 96
    sequence_type          go to state 97
    string_type            go to state 98
    wide_string_type       go to state 99
    fixed_pt_type          go to state 100
    value_base_type        go to state 101
    principal_type         go to state 102


State 211

  244 fixed_pt_type: T_FIXED T_LESS_THAN_SIGN positive_int_const . T_COMMA T_INTEGER_LITERAL T_GREATER_THAN_SIGN

    T_COMMA  shift, and go to state 275


State 212

  202 sequence_type: T_SEQUENCE T_LESS_THAN_SIGN simple_type_spec . T_COMMA positive_int_const T_GREATER_THAN_SIGN
  203              | T_SEQUENCE T_LESS_THAN_SIGN simple_type_spec . T_GREATER_THAN_SIGN

    T_COMMA              shift, and go to state 276
    T_GREATER_THAN_SIGN  shift, and go to state 277


State 213

  211 fixed_array_size: T_LEFT_SQUARE_BRACKET . positive_int_const T_RIGHT_SQUARE_BRACKET

    T_CHARACTER_LITERAL    shift, and go to state 172
    T_FALSE                shift, and go to state 173
    T_FIXED_PT_LITERAL     shift, and go to state 174
    T_FLOATING_PT_LITERAL  shift, and go to state 175
    T_IDENTIFIER           shift, and go to state 41
    T_INTEGER_LITERAL      shift, and go to state 176
    T_LEFT_PARANTHESIS     shift, and go to state 177
    T_MINUS_SIGN           shift, and go to state 178
    T_PLUS_SIGN            shift, and go to state 179
    T_SCOPE                shift, and go to state 44
    T_STRING_LITERAL       shift, and go to state 180
    T_TILDE                shift, and go to state 181
    T_TRUE                 shift, and go to state 182

    scoped_name         go to state 183
    const_exp           go to state 184
    or_expr             go to state 185
    xor_expr            go to state 186
    and_expr            go to state 187
    shift_expr          go to state 188
    add_expr            go to state 189
    mult_expr           go to state 190
    unary_expr          go to state 191
    primary_expr        go to state 192
    literal             go to state 193
    positive_int_const  go to state 278
    T_string_literal    go to state 195


State 214

  208 array_declarator: T_IDENTIFIER fixed_array_sizes .

    $default  reduce using rule 208 (array_declarator)


State 215

  209 fixed_array_sizes: fixed_array_size .
  210                  | fixed_array_size . fixed_array_sizes

    T_LEFT_SQUARE_BRACKET  shift, and go to state 213

    $default  reduce using rule 209 (fixed_array_sizes)

    fixed_array_sizes  go to state 279
    fixed_array_size   go to state 215


State 216

  151 declarators: declarator T_COMMA . declarators

    T_IDENTIFIER  shift, and go to state 137

    declarators         go to state 280
    declarator          go to state 139
    simple_declarator   go to state 140
    complex_declarator  go to state 141
    array_declarator    go to state 142


State 217

  185 union_type: T_UNION T_IDENTIFIER T_SWITCH T_LEFT_PARANTHESIS . switch_type_spec T_RIGHT_PARANTHESIS @4 T_LEFT_CURLY_BRACKET switch_body T_RIGHT_CURLY_BRACKET

    T_BOOLEAN     shift, and go to state 36
    T_CHAR        shift, and go to state 37
    T_ENUM        shift, and go to state 3
    T_IDENTIFIER  shift, and go to state 41
    T_LONG        shift, and go to state 281
    T_SCOPE       shift, and go to state 44
    T_SHORT       shift, and go to state 45
    T_UNSIGNED    shift, and go to state 47

    scoped_name            go to state 282
    integer_type           go to state 283
    signed_int             go to state 54
    signed_short_int       go to state 55
    signed_long_int        go to state 56
    signed_longlong_int    go to state 57
    unsigned_int           go to state 58
    unsigned_short_int     go to state 59
    unsigned_long_int      go to state 60
    unsigned_longlong_int  go to state 61
    char_type              go to state 284
    boolean_type           go to state 285
    switch_type_spec       go to state 286
    enum_type              go to state 287


State 218

   25 interface_header: T_ABSTRACT T_INTERFACE T_IDENTIFIER interface_inheritance_spec .

    $default  reduce using rule 25 (interface_header)


State 219

   49 value_abs_dcl: T_ABSTRACT T_VALUETYPE T_IDENTIFIER T_LEFT_CURLY_BRACKET . value_body T_RIGHT_CURLY_BRACKET

    T_ATTRIBUTE  shift, and go to state 151
    T_CONST      shift, and go to state 2
    T_ENUM       shift, and go to state 3
    T_EXCEPTION  shift, and go to state 4
    T_ONEWAY     shift, and go to state 152
    T_READONLY   shift, and go to state 153
    T_STRUCT     shift, and go to state 8
    T_TYPEDEF    shift, and go to state 9
    T_UNION      shift, and go to state 10
    T_NATIVE     shift, and go to state 14

    T_RIGHT_CURLY_BRACKET  reduce using rule 51 (value_body)
    $default               reduce using rule 220 (op_attribute)

    exports       go to state 288
    export        go to state 156
    value_body    go to state 289
    const_dcl     go to state 157
    type_dcl      go to state 158
    struct_type   go to state 32
    union_type    go to state 33
    enum_type     go to state 34
    attr_dcl      go to state 159
    except_dcl    go to state 160
    op_dcl        go to state 161
    op_attribute  go to state 162


State 220

   50 value_abs_dcl: T_ABSTRACT T_VALUETYPE T_IDENTIFIER value_inheritance_spec . T_LEFT_CURLY_BRACKET value_body T_RIGHT_CURLY_BRACKET

    T_LEFT_CURLY_BRACKET  shift, and go to state 290


State 221

   66 value_inheritance_bases: T_TRUNCATABLE . value_name
   67                        | T_TRUNCATABLE . value_name T_COMMA value_names

    T_IDENTIFIER  shift, and go to state 41
    T_SCOPE       shift, and go to state 44

    scoped_name  go to state 222
    value_name   go to state 291


State 222

   41 scoped_name: scoped_name . T_SCOPE T_IDENTIFIER
   69 value_name: scoped_name .

    T_SCOPE  shift, and go to state 127

    $default  reduce using rule 69 (value_name)


State 223

   61 value_inheritance_spec: T_COLON value_inheritance_bases .
   62                       | T_COLON value_inheritance_bases . T_SUPPORTS interface_names

    T_SUPPORTS  shift, and go to state 292

    $default  reduce using rule 61 (value_inheritance_spec)


State 224

   64 value_inheritance_bases: value_name .
   65                        | value_name . T_COMMA value_names

    T_COMMA  shift, and go to state 293

    $default  reduce using rule 64 (value_inheritance_bases)


State 225

   63 value_inheritance_spec: T_SUPPORTS interface_names .

    $default  reduce using rule 63 (value_inheritance_spec)


State 226

   58 value_header: T_CUSTOM T_VALUETYPE T_IDENTIFIER value_inheritance_spec .

    $default  reduce using rule 58 (value_header)


State 227

   41 scoped_name: scoped_name . T_SCOPE T_IDENTIFIER
  243 param_type_spec: scoped_name .

    T_SCOPE  shift, and go to state 127

    $default  reduce using rule 243 (param_type_spec)


State 228

  240 param_type_spec: base_type_spec .

    $default  reduce using rule 240 (param_type_spec)


State 229

  241 param_type_spec: string_type .

    $default  reduce using rule 241 (param_type_spec)


State 230

  242 param_type_spec: wide_string_type .

    $default  reduce using rule 242 (param_type_spec)


State 231

  212 attr_dcl: T_ATTRIBUTE param_type_spec . simple_declarators

    T_IDENTIFIER  shift, and go to state 108

    simple_declarator   go to state 294
    simple_declarators  go to state 295


State 232

  213 attr_dcl: T_READONLY T_ATTRIBUTE . param_type_spec simple_declarators

    T_ANY         shift, and go to state 74
    T_BOOLEAN     shift, and go to state 36
    T_CHAR        shift, and go to state 37
    T_DOUBLE      shift, and go to state 38
    T_FLOAT       shift, and go to state 40
    T_IDENTIFIER  shift, and go to state 41
    T_LONG        shift, and go to state 42
    T_OCTET       shift, and go to state 43
    T_PRINCIPAL   shift, and go to state 76
    T_SCOPE       shift, and go to state 44
    T_SHORT       shift, and go to state 45
    T_STRING      shift, and go to state 46
    T_OBJECT      shift, and go to state 78
    T_UNSIGNED    shift, and go to state 47
    T_WCHAR       shift, and go to state 48
    T_WSTRING     shift, and go to state 49
    T_VALUEBASE   shift, and go to state 79

    scoped_name            go to state 227
    base_type_spec         go to state 228
    floating_pt_type       go to state 86
    integer_type           go to state 87
    signed_int             go to state 54
    signed_short_int       go to state 55
    signed_long_int        go to state 56
    signed_longlong_int    go to state 57
    unsigned_int           go to state 58
    unsigned_short_int     go to state 59
    unsigned_long_int      go to state 60
    unsigned_longlong_int  go to state 61
    char_type              go to state 88
    wide_char_type         go to state 89
    boolean_type           go to state 90
    octet_type             go to state 91
    any_type               go to state 92
    object_type            go to state 93
    string_type            go to state 229
    wide_string_type       go to state 230
    param_type_spec        go to state 296
    value_base_type        go to state 101
    principal_type         go to state 102


State 233

   19 interface_dcl: interface_header T_LEFT_CURLY_BRACKET interface_body T_RIGHT_CURLY_BRACKET .

    $default  reduce using rule 19 (interface_dcl)


State 234

   29 exports: export exports .

    $default  reduce using rule 29 (exports)


State 235

   31 export: const_dcl T_SEMICOLON .

    $default  reduce using rule 31 (export)


State 236

   30 export: type_dcl T_SEMICOLON .

    $default  reduce using rule 30 (export)


State 237

   33 export: attr_dcl T_SEMICOLON .

    $default  reduce using rule 33 (export)


State 238

   32 export: except_dcl T_SEMICOLON .

    $default  reduce using rule 32 (export)


State 239

   34 export: op_dcl T_SEMICOLON .

    $default  reduce using rule 34 (export)


State 240

  223 op_type_spec: T_VOID .

    $default  reduce using rule 223 (op_type_spec)


State 241

  219 op_dcl: op_attribute op_type_spec . T_IDENTIFIER parameter_dcls raises_expr context_expr

    T_IDENTIFIER  shift, and go to state 297


State 242

  222 op_type_spec: param_type_spec .

    $default  reduce using rule 222 (op_type_spec)


State 243

   73 state_member: T_PUBLIC type_spec . declarators T_SEMICOLON

    T_IDENTIFIER  shift, and go to state 137

    declarators         go to state 298
    declarator          go to state 139
    simple_declarator   go to state 140
    complex_declarator  go to state 141
    array_declarator    go to state 142


State 244

   74 state_member: T_PRIVATE type_spec . declarators T_SEMICOLON

    T_IDENTIFIER  shift, and go to state 137

    declarators         go to state 299
    declarator          go to state 139
    simple_declarator   go to state 140
    complex_declarator  go to state 141
    array_declarator    go to state 142


State 245

   75 init_dcl: T_FACTORY T_IDENTIFIER . T_LEFT_PARANTHESIS init_param_decls T_RIGHT_PARANTHESIS T_SEMICOLON

    T_LEFT_PARANTHESIS  shift, and go to state 300


State 246

   53 value_dcl: value_header T_LEFT_CURLY_BRACKET value_elements T_RIGHT_CURLY_BRACKET .

    $default  reduce using rule 53 (value_dcl)


State 247

   56 value_elements: value_element value_elements .

    $default  reduce using rule 56 (value_elements)


State 248

  114 primary_expr: T_LEFT_PARANTHESIS const_exp . T_RIGHT_PARANTHESIS

    T_RIGHT_PARANTHESIS  shift, and go to state 301


State 249

  108 unary_expr: T_MINUS_SIGN primary_expr .

    $default  reduce using rule 108 (unary_expr)


State 250

  109 unary_expr: T_PLUS_SIGN primary_expr .

    $default  reduce using rule 109 (unary_expr)


State 251

  239 T_string_literal: T_STRING_LITERAL T_string_literal .

    $default  reduce using rule 239 (T_string_literal)


State 252

  110 unary_expr: T_TILDE primary_expr .

    $default  reduce using rule 110 (unary_expr)


State 253

   93 or_expr: or_expr T_VERTICAL_LINE . xor_expr

    T_CHARACTER_LITERAL    shift, and go to state 172
    T_FALSE                shift, and go to state 173
    T_FIXED_PT_LITERAL     shift, and go to state 174
    T_FLOATING_PT_LITERAL  shift, and go to state 175
    T_IDENTIFIER           shift, and go to state 41
    T_INTEGER_LITERAL      shift, and go to state 176
    T_LEFT_PARANTHESIS     shift, and go to state 177
    T_MINUS_SIGN           shift, and go to state 178
    T_PLUS_SIGN            shift, and go to state 179
    T_SCOPE                shift, and go to state 44
    T_STRING_LITERAL       shift, and go to state 180
    T_TILDE                shift, and go to state 181
    T_TRUE                 shift, and go to state 182

    scoped_name       go to state 183
    xor_expr          go to state 302
    and_expr          go to state 187
    shift_expr        go to state 188
    add_expr          go to state 189
    mult_expr         go to state 190
    unary_expr        go to state 191
    primary_expr      go to state 192
    literal           go to state 193
    T_string_literal  go to state 195


State 254

   95 xor_expr: xor_expr T_CIRCUMFLEX . and_expr

    T_CHARACTER_LITERAL    shift, and go to state 172
    T_FALSE                shift, and go to state 173
    T_FIXED_PT_LITERAL     shift, and go to state 174
    T_FLOATING_PT_LITERAL  shift, and go to state 175
    T_IDENTIFIER           shift, and go to state 41
    T_INTEGER_LITERAL      shift, and go to state 176
    T_LEFT_PARANTHESIS     shift, and go to state 177
    T_MINUS_SIGN           shift, and go to state 178
    T_PLUS_SIGN            shift, and go to state 179
    T_SCOPE                shift, and go to state 44
    T_STRING_LITERAL       shift, and go to state 180
    T_TILDE                shift, and go to state 181
    T_TRUE                 shift, and go to state 182

    scoped_name       go to state 183
    and_expr          go to state 303
    shift_expr        go to state 188
    add_expr          go to state 189
    mult_expr         go to state 190
    unary_expr        go to state 191
    primary_expr      go to state 192
    literal           go to state 193
    T_string_literal  go to state 195


State 255

   97 and_expr: and_expr T_AMPERSAND . shift_expr

    T_CHARACTER_LITERAL    shift, and go to state 172
    T_FALSE                shift, and go to state 173
    T_FIXED_PT_LITERAL     shift, and go to state 174
    T_FLOATING_PT_LITERAL  shift, and go to state 175
    T_IDENTIFIER           shift, and go to state 41
    T_INTEGER_LITERAL      shift, and go to state 176
    T_LEFT_PARANTHESIS     shift, and go to state 177
    T_MINUS_SIGN           shift, and go to state 178
    T_PLUS_SIGN            shift, and go to state 179
    T_SCOPE                shift, and go to state 44
    T_STRING_LITERAL       shift, and go to state 180
    T_TILDE                shift, and go to state 181
    T_TRUE                 shift, and go to state 182

    scoped_name       go to state 183
    shift_expr        go to state 304
    add_expr          go to state 189
    mult_expr         go to state 190
    unary_expr        go to state 191
    primary_expr      go to state 192
    literal           go to state 193
    T_string_literal  go to state 195


State 256

  100 shift_expr: shift_expr T_SHIFTLEFT . add_expr

    T_CHARACTER_LITERAL    shift, and go to state 172
    T_FALSE                shift, and go to state 173
    T_FIXED_PT_LITERAL     shift, and go to state 174
    T_FLOATING_PT_LITERAL  shift, and go to state 175
    T_IDENTIFIER           shift, and go to state 41
    T_INTEGER_LITERAL      shift, and go to state 176
    T_LEFT_PARANTHESIS     shift, and go to state 177
    T_MINUS_SIGN           shift, and go to state 178
    T_PLUS_SIGN            shift, and go to state 179
    T_SCOPE                shift, and go to state 44
    T_STRING_LITERAL       shift, and go to state 180
    T_TILDE                shift, and go to state 181
    T_TRUE                 shift, and go to state 182

    scoped_name       go to state 183
    add_expr          go to state 305
    mult_expr         go to state 190
    unary_expr        go to state 191
    primary_expr      go to state 192
    literal           go to state 193
    T_string_literal  go to state 195


State 257

   99 shift_expr: shift_expr T_SHIFTRIGHT . add_expr

    T_CHARACTER_LITERAL    shift, and go to state 172
    T_FALSE                shift, and go to state 173
    T_FIXED_PT_LITERAL     shift, and go to state 174
    T_FLOATING_PT_LITERAL  shift, and go to state 175
    T_IDENTIFIER           shift, and go to state 41
    T_INTEGER_LITERAL      shift, and go to state 176
    T_LEFT_PARANTHESIS     shift, and go to state 177
    T_MINUS_SIGN           shift, and go to state 178
    T_PLUS_SIGN            shift, and go to state 179
    T_SCOPE                shift, and go to state 44
    T_STRING_LITERAL       shift, and go to state 180
    T_TILDE                shift, and go to state 181
    T_TRUE                 shift, and go to state 182

    scoped_name       go to state 183
    add_expr          go to state 306
    mult_expr         go to state 190
    unary_expr        go to state 191
    primary_expr      go to state 192
    literal           go to state 193
    T_string_literal  go to state 195


State 258

  103 add_expr: add_expr T_MINUS_SIGN . mult_expr

    T_CHARACTER_LITERAL    shift, and go to state 172
    T_FALSE                shift, and go to state 173
    T_FIXED_PT_LITERAL     shift, and go to state 174
    T_FLOATING_PT_LITERAL  shift, and go to state 175
    T_IDENTIFIER           shift, and go to state 41
    T_INTEGER_LITERAL      shift, and go to state 176
    T_LEFT_PARANTHESIS     shift, and go to state 177
    T_MINUS_SIGN           shift, and go to state 178
    T_PLUS_SIGN            shift, and go to state 179
    T_SCOPE                shift, and go to state 44
    T_STRING_LITERAL       shift, and go to state 180
    T_TILDE                shift, and go to state 181
    T_TRUE                 shift, and go to state 182

    scoped_name       go to state 183
    mult_expr         go to state 307
    unary_expr        go to state 191
    primary_expr      go to state 192
    literal           go to state 193
    T_string_literal  go to state 195


State 259

  102 add_expr: add_expr T_PLUS_SIGN . mult_expr

    T_CHARACTER_LITERAL    shift, and go to state 172
    T_FALSE                shift, and go to state 173
    T_FIXED_PT_LITERAL     shift, and go to state 174
    T_FLOATING_PT_LITERAL  shift, and go to state 175
    T_IDENTIFIER           shift, and go to state 41
    T_INTEGER_LITERAL      shift, and go to state 176
    T_LEFT_PARANTHESIS     shift, and go to state 177
    T_MINUS_SIGN           shift, and go to state 178
    T_PLUS_SIGN            shift, and go to state 179
    T_SCOPE                shift, and go to state 44
    T_STRING_LITERAL       shift, and go to state 180
    T_TILDE                shift, and go to state 181
    T_TRUE                 shift, and go to state 182

    scoped_name       go to state 183
    mult_expr         go to state 308
    unary_expr        go to state 191
    primary_expr      go to state 192
    literal           go to state 193
    T_string_literal  go to state 195


State 260

  105 mult_expr: mult_expr T_ASTERISK . unary_expr

    T_CHARACTER_LITERAL    shift, and go to state 172
    T_FALSE                shift, and go to state 173
    T_FIXED_PT_LITERAL     shift, and go to state 174
    T_FLOATING_PT_LITERAL  shift, and go to state 175
    T_IDENTIFIER           shift, and go to state 41
    T_INTEGER_LITERAL      shift, and go to state 176
    T_LEFT_PARANTHESIS     shift, and go to state 177
    T_MINUS_SIGN           shift, and go to state 178
    T_PLUS_SIGN            shift, and go to state 179
    T_SCOPE                shift, and go to state 44
    T_STRING_LITERAL       shift, and go to state 180
    T_TILDE                shift, and go to state 181
    T_TRUE                 shift, and go to state 182

    scoped_name       go to state 183
    unary_expr        go to state 309
    primary_expr      go to state 192
    literal           go to state 193
    T_string_literal  go to state 195


State 261

  107 mult_expr: mult_expr T_PERCENT_SIGN . unary_expr

    T_CHARACTER_LITERAL    shift, and go to state 172
    T_FALSE                shift, and go to state 173
    T_FIXED_PT_LITERAL     shift, and go to state 174
    T_FLOATING_PT_LITERAL  shift, and go to state 175
    T_IDENTIFIER           shift, and go to state 41
    T_INTEGER_LITERAL      shift, and go to state 176
    T_LEFT_PARANTHESIS     shift, and go to state 177
    T_MINUS_SIGN           shift, and go to state 178
    T_PLUS_SIGN            shift, and go to state 179
    T_SCOPE                shift, and go to state 44
    T_STRING_LITERAL       shift, and go to state 180
    T_TILDE                shift, and go to state 181
    T_TRUE                 shift, and go to state 182

    scoped_name       go to state 183
    unary_expr        go to state 310
    primary_expr      go to state 192
    literal           go to state 193
    T_string_literal  go to state 195


State 262

  106 mult_expr: mult_expr T_SOLIDUS . unary_expr

    T_CHARACTER_LITERAL    shift, and go to state 172
    T_FALSE                shift, and go to state 173
    T_FIXED_PT_LITERAL     shift, and go to state 174
    T_FLOATING_PT_LITERAL  shift, and go to state 175
    T_IDENTIFIER           shift, and go to state 41
    T_INTEGER_LITERAL      shift, and go to state 176
    T_LEFT_PARANTHESIS     shift, and go to state 177
    T_MINUS_SIGN           shift, and go to state 178
    T_PLUS_SIGN            shift, and go to state 179
    T_SCOPE                shift, and go to state 44
    T_STRING_LITERAL       shift, and go to state 180
    T_TILDE                shift, and go to state 181
    T_TRUE                 shift, and go to state 182

    scoped_name       go to state 183
    unary_expr        go to state 311
    primary_expr      go to state 192
    literal           go to state 193
    T_string_literal  go to state 195


State 263

  204 string_type: T_STRING T_LESS_THAN_SIGN positive_int_const T_GREATER_THAN_SIGN .

    $default  reduce using rule 204 (string_type)


State 264

  206 wide_string_type: T_WSTRING T_LESS_THAN_SIGN positive_int_const T_GREATER_THAN_SIGN .

    $default  reduce using rule 206 (wide_string_type)


State 265

   80 const_dcl: T_CONST const_type T_IDENTIFIER T_EQUAL const_exp .

    $default  reduce using rule 80 (const_dcl)


State 266

  198 enum_type: T_ENUM T_IDENTIFIER T_LEFT_CURLY_BRACKET enumerators T_RIGHT_CURLY_BRACKET .

    $default  reduce using rule 198 (enum_type)


State 267

  200 enumerators: enumerator T_COMMA . enumerators

    T_IDENTIFIER  shift, and go to state 200

    enumerators  go to state 312
    enumerator   go to state 202


State 268

  183 member: type_spec declarators . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 313


State 269

  218 members: member members .

    $default  reduce using rule 218 (members)


State 270

  216 except_dcl: T_EXCEPTION T_IDENTIFIER T_LEFT_CURLY_BRACKET members T_RIGHT_CURLY_BRACKET .

    $default  reduce using rule 216 (except_dcl)


State 271

   38 scoped_names: scoped_name T_COMMA . scoped_names

    T_IDENTIFIER  shift, and go to state 41
    T_SCOPE       shift, and go to state 44

    scoped_names  go to state 314
    scoped_name   go to state 208


State 272

   16 module: T_MODULE T_IDENTIFIER $@1 T_LEFT_CURLY_BRACKET definitions . $@2 T_RIGHT_CURLY_BRACKET

    $default  reduce using rule 15 ($@2)

    $@2  go to state 315


State 273

  180 struct_type: T_STRUCT T_IDENTIFIER @3 T_LEFT_CURLY_BRACKET member_list . T_RIGHT_CURLY_BRACKET

    T_RIGHT_CURLY_BRACKET  shift, and go to state 316


State 274

  181 member_list: member .
  182            | member . member_list

    T_ANY         shift, and go to state 74
    T_BOOLEAN     shift, and go to state 36
    T_CHAR        shift, and go to state 37
    T_DOUBLE      shift, and go to state 38
    T_ENUM        shift, and go to state 3
    T_FIXED       shift, and go to state 75
    T_FLOAT       shift, and go to state 40
    T_IDENTIFIER  shift, and go to state 41
    T_LONG        shift, and go to state 42
    T_OCTET       shift, and go to state 43
    T_PRINCIPAL   shift, and go to state 76
    T_SCOPE       shift, and go to state 44
    T_SEQUENCE    shift, and go to state 77
    T_SHORT       shift, and go to state 45
    T_STRING      shift, and go to state 46
    T_STRUCT      shift, and go to state 8
    T_OBJECT      shift, and go to state 78
    T_UNION       shift, and go to state 10
    T_UNSIGNED    shift, and go to state 47
    T_WCHAR       shift, and go to state 48
    T_WSTRING     shift, and go to state 49
    T_VALUEBASE   shift, and go to state 79

    $default  reduce using rule 181 (member_list)

    scoped_name            go to state 80
    type_spec              go to state 203
    simple_type_spec       go to state 82
    base_type_spec         go to state 83
    template_type_spec     go to state 84
    constr_type_spec       go to state 85
    floating_pt_type       go to state 86
    integer_type           go to state 87
    signed_int             go to state 54
    signed_short_int       go to state 55
    signed_long_int        go to state 56
    signed_longlong_int    go to state 57
    unsigned_int           go to state 58
    unsigned_short_int     go to state 59
    unsigned_long_int      go to state 60
    unsigned_longlong_int  go to state 61
    char_type              go to state 88
    wide_char_type         go to state 89
    boolean_type           go to state 90
    octet_type             go to state 91
    any_type               go to state 92
    object_type            go to state 93
    struct_type            go to state 94
    member_list            go to state 317
    member                 go to state 274
    union_type             go to state 95
    enum_type              go to state 96
    sequence_type          go to state 97
    string_type            go to state 98
    wide_string_type       go to state 99
    fixed_pt_type          go to state 100
    value_base_type        go to state 101
    principal_type         go to state 102


State 275

  244 fixed_pt_type: T_FIXED T_LESS_THAN_SIGN positive_int_const T_COMMA . T_INTEGER_LITERAL T_GREATER_THAN_SIGN

    T_INTEGER_LITERAL  shift, and go to state 318


State 276

  202 sequence_type: T_SEQUENCE T_LESS_THAN_SIGN simple_type_spec T_COMMA . positive_int_const T_GREATER_THAN_SIGN

    T_CHARACTER_LITERAL    shift, and go to state 172
    T_FALSE                shift, and go to state 173
    T_FIXED_PT_LITERAL     shift, and go to state 174
    T_FLOATING_PT_LITERAL  shift, and go to state 175
    T_IDENTIFIER           shift, and go to state 41
    T_INTEGER_LITERAL      shift, and go to state 176
    T_LEFT_PARANTHESIS     shift, and go to state 177
    T_MINUS_SIGN           shift, and go to state 178
    T_PLUS_SIGN            shift, and go to state 179
    T_SCOPE                shift, and go to state 44
    T_STRING_LITERAL       shift, and go to state 180
    T_TILDE                shift, and go to state 181
    T_TRUE                 shift, and go to state 182

    scoped_name         go to state 183
    const_exp           go to state 184
    or_expr             go to state 185
    xor_expr            go to state 186
    and_expr            go to state 187
    shift_expr          go to state 188
    add_expr            go to state 189
    mult_expr           go to state 190
    unary_expr          go to state 191
    primary_expr        go to state 192
    literal             go to state 193
    positive_int_const  go to state 319
    T_string_literal    go to state 195


State 277

  203 sequence_type: T_SEQUENCE T_LESS_THAN_SIGN simple_type_spec T_GREATER_THAN_SIGN .

    $default  reduce using rule 203 (sequence_type)


State 278

  211 fixed_array_size: T_LEFT_SQUARE_BRACKET positive_int_const . T_RIGHT_SQUARE_BRACKET

    T_RIGHT_SQUARE_BRACKET  shift, and go to state 320


State 279

  210 fixed_array_sizes: fixed_array_size fixed_array_sizes .

    $default  reduce using rule 210 (fixed_array_sizes)


State 280

  151 declarators: declarator T_COMMA declarators .

    $default  reduce using rule 151 (declarators)


State 281

  165 signed_long_int: T_LONG .
  166 signed_longlong_int: T_LONG . T_LONG

    T_LONG  shift, and go to state 121

    $default  reduce using rule 165 (signed_long_int)


State 282

   41 scoped_name: scoped_name . T_SCOPE T_IDENTIFIER
  190 switch_type_spec: scoped_name .

    T_SCOPE  shift, and go to state 127

    $default  reduce using rule 190 (switch_type_spec)


State 283

  186 switch_type_spec: integer_type .

    $default  reduce using rule 186 (switch_type_spec)


State 284

  187 switch_type_spec: char_type .

    $default  reduce using rule 187 (switch_type_spec)


State 285

  188 switch_type_spec: boolean_type .

    $default  reduce using rule 188 (switch_type_spec)


State 286

  185 union_type: T_UNION T_IDENTIFIER T_SWITCH T_LEFT_PARANTHESIS switch_type_spec . T_RIGHT_PARANTHESIS @4 T_LEFT_CURLY_BRACKET switch_body T_RIGHT_CURLY_BRACKET

    T_RIGHT_PARANTHESIS  shift, and go to state 321


State 287

  189 switch_type_spec: enum_type .

    $default  reduce using rule 189 (switch_type_spec)


State 288

   52 value_body: exports .

    $default  reduce using rule 52 (value_body)


State 289

   49 value_abs_dcl: T_ABSTRACT T_VALUETYPE T_IDENTIFIER T_LEFT_CURLY_BRACKET value_body . T_RIGHT_CURLY_BRACKET

    T_RIGHT_CURLY_BRACKET  shift, and go to state 322


State 290

   50 value_abs_dcl: T_ABSTRACT T_VALUETYPE T_IDENTIFIER value_inheritance_spec T_LEFT_CURLY_BRACKET . value_body T_RIGHT_CURLY_BRACKET

    T_ATTRIBUTE  shift, and go to state 151
    T_CONST      shift, and go to state 2
    T_ENUM       shift, and go to state 3
    T_EXCEPTION  shift, and go to state 4
    T_ONEWAY     shift, and go to state 152
    T_READONLY   shift, and go to state 153
    T_STRUCT     shift, and go to state 8
    T_TYPEDEF    shift, and go to state 9
    T_UNION      shift, and go to state 10
    T_NATIVE     shift, and go to state 14

    T_RIGHT_CURLY_BRACKET  reduce using rule 51 (value_body)
    $default               reduce using rule 220 (op_attribute)

    exports       go to state 288
    export        go to state 156
    value_body    go to state 323
    const_dcl     go to state 157
    type_dcl      go to state 158
    struct_type   go to state 32
    union_type    go to state 33
    enum_type     go to state 34
    attr_dcl      go to state 159
    except_dcl    go to state 160
    op_dcl        go to state 161
    op_attribute  go to state 162


State 291

   66 value_inheritance_bases: T_TRUNCATABLE value_name .
   67                        | T_TRUNCATABLE value_name . T_COMMA value_names

    T_COMMA  shift, and go to state 324

    $default  reduce using rule 66 (value_inheritance_bases)


State 292

   62 value_inheritance_spec: T_COLON value_inheritance_bases T_SUPPORTS . interface_names

    T_IDENTIFIER  shift, and go to state 41
    T_SCOPE       shift, and go to state 44

    interface_names  go to state 325
    scoped_names     go to state 207
    scoped_name      go to state 208


State 293

   65 value_inheritance_bases: value_name T_COMMA . value_names

    T_IDENTIFIER  shift, and go to state 41
    T_SCOPE       shift, and go to state 44

    scoped_names  go to state 326
    scoped_name   go to state 208
    value_names   go to state 327


State 294

  214 simple_declarators: simple_declarator .
  215                   | simple_declarator . T_COMMA simple_declarators

    T_COMMA  shift, and go to state 328

    $default  reduce using rule 214 (simple_declarators)


State 295

  212 attr_dcl: T_ATTRIBUTE param_type_spec simple_declarators .

    $default  reduce using rule 212 (attr_dcl)


State 296

  213 attr_dcl: T_READONLY T_ATTRIBUTE param_type_spec . simple_declarators

    T_IDENTIFIER  shift, and go to state 108

    simple_declarator   go to state 294
    simple_declarators  go to state 329


State 297

  219 op_dcl: op_attribute op_type_spec T_IDENTIFIER . parameter_dcls raises_expr context_expr

    T_LEFT_PARANTHESIS  shift, and go to state 330

    parameter_dcls  go to state 331


State 298

   73 state_member: T_PUBLIC type_spec declarators . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 332


State 299

   74 state_member: T_PRIVATE type_spec declarators . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 333


State 300

   75 init_dcl: T_FACTORY T_IDENTIFIER T_LEFT_PARANTHESIS . init_param_decls T_RIGHT_PARANTHESIS T_SEMICOLON

    T_IN  shift, and go to state 334

    init_param_decls      go to state 335
    init_param_decl       go to state 336
    init_param_attribute  go to state 337


State 301

  114 primary_expr: T_LEFT_PARANTHESIS const_exp T_RIGHT_PARANTHESIS .

    $default  reduce using rule 114 (primary_expr)


State 302

   93 or_expr: or_expr T_VERTICAL_LINE xor_expr .
   95 xor_expr: xor_expr . T_CIRCUMFLEX and_expr

    T_CIRCUMFLEX  shift, and go to state 254

    $default  reduce using rule 93 (or_expr)


State 303

   95 xor_expr: xor_expr T_CIRCUMFLEX and_expr .
   97 and_expr: and_expr . T_AMPERSAND shift_expr

    T_AMPERSAND  shift, and go to state 255

    $default  reduce using rule 95 (xor_expr)


State 304

   97 and_expr: and_expr T_AMPERSAND shift_expr .
   99 shift_expr: shift_expr . T_SHIFTRIGHT add_expr
  100           | shift_expr . T_SHIFTLEFT add_expr

    T_SHIFTLEFT   shift, and go to state 256
    T_SHIFTRIGHT  shift, and go to state 257

    $default  reduce using rule 97 (and_expr)


State 305

  100 shift_expr: shift_expr T_SHIFTLEFT add_expr .
  102 add_expr: add_expr . T_PLUS_SIGN mult_expr
  103         | add_expr . T_MINUS_SIGN mult_expr

    T_MINUS_SIGN  shift, and go to state 258
    T_PLUS_SIGN   shift, and go to state 259

    $default  reduce using rule 100 (shift_expr)


State 306

   99 shift_expr: shift_expr T_SHIFTRIGHT add_expr .
  102 add_expr: add_expr . T_PLUS_SIGN mult_expr
  103         | add_expr . T_MINUS_SIGN mult_expr

    T_MINUS_SIGN  shift, and go to state 258
    T_PLUS_SIGN   shift, and go to state 259

    $default  reduce using rule 99 (shift_expr)


State 307

  103 add_expr: add_expr T_MINUS_SIGN mult_expr .
  105 mult_expr: mult_expr . T_ASTERISK unary_expr
  106          | mult_expr . T_SOLIDUS unary_expr
  107          | mult_expr . T_PERCENT_SIGN unary_expr

    T_ASTERISK      shift, and go to state 260
    T_PERCENT_SIGN  shift, and go to state 261
    T_SOLIDUS       shift, and go to state 262

    $default  reduce using rule 103 (add_expr)


State 308

  102 add_expr: add_expr T_PLUS_SIGN mult_expr .
  105 mult_expr: mult_expr . T_ASTERISK unary_expr
  106          | mult_expr . T_SOLIDUS unary_expr
  107          | mult_expr . T_PERCENT_SIGN unary_expr

    T_ASTERISK      shift, and go to state 260
    T_PERCENT_SIGN  shift, and go to state 261
    T_SOLIDUS       shift, and go to state 262

    $default  reduce using rule 102 (add_expr)


State 309

  105 mult_expr: mult_expr T_ASTERISK unary_expr .

    $default  reduce using rule 105 (mult_expr)


State 310

  107 mult_expr: mult_expr T_PERCENT_SIGN unary_expr .

    $default  reduce using rule 107 (mult_expr)


State 311

  106 mult_expr: mult_expr T_SOLIDUS unary_expr .

    $default  reduce using rule 106 (mult_expr)


State 312

  200 enumerators: enumerator T_COMMA enumerators .

    $default  reduce using rule 200 (enumerators)


State 313

  183 member: type_spec declarators T_SEMICOLON .

    $default  reduce using rule 183 (member)


State 314

   38 scoped_names: scoped_name T_COMMA scoped_names .

    $default  reduce using rule 38 (scoped_names)


State 315

   16 module: T_MODULE T_IDENTIFIER $@1 T_LEFT_CURLY_BRACKET definitions $@2 . T_RIGHT_CURLY_BRACKET

    T_RIGHT_CURLY_BRACKET  shift, and go to state 338


State 316

  180 struct_type: T_STRUCT T_IDENTIFIER @3 T_LEFT_CURLY_BRACKET member_list T_RIGHT_CURLY_BRACKET .

    $default  reduce using rule 180 (struct_type)


State 317

  182 member_list: member member_list .

    $default  reduce using rule 182 (member_list)


State 318

  244 fixed_pt_type: T_FIXED T_LESS_THAN_SIGN positive_int_const T_COMMA T_INTEGER_LITERAL . T_GREATER_THAN_SIGN

    T_GREATER_THAN_SIGN  shift, and go to state 339


State 319

  202 sequence_type: T_SEQUENCE T_LESS_THAN_SIGN simple_type_spec T_COMMA positive_int_const . T_GREATER_THAN_SIGN

    T_GREATER_THAN_SIGN  shift, and go to state 340


State 320

  211 fixed_array_size: T_LEFT_SQUARE_BRACKET positive_int_const T_RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 211 (fixed_array_size)


State 321

  185 union_type: T_UNION T_IDENTIFIER T_SWITCH T_LEFT_PARANTHESIS switch_type_spec T_RIGHT_PARANTHESIS . @4 T_LEFT_CURLY_BRACKET switch_body T_RIGHT_CURLY_BRACKET

    $default  reduce using rule 184 (@4)

    @4  go to state 341


State 322

   49 value_abs_dcl: T_ABSTRACT T_VALUETYPE T_IDENTIFIER T_LEFT_CURLY_BRACKET value_body T_RIGHT_CURLY_BRACKET .

    $default  reduce using rule 49 (value_abs_dcl)


State 323

   50 value_abs_dcl: T_ABSTRACT T_VALUETYPE T_IDENTIFIER value_inheritance_spec T_LEFT_CURLY_BRACKET value_body . T_RIGHT_CURLY_BRACKET

    T_RIGHT_CURLY_BRACKET  shift, and go to state 342


State 324

   67 value_inheritance_bases: T_TRUNCATABLE value_name T_COMMA . value_names

    T_IDENTIFIER  shift, and go to state 41
    T_SCOPE       shift, and go to state 44

    scoped_names  go to state 326
    scoped_name   go to state 208
    value_names   go to state 343


State 325

   62 value_inheritance_spec: T_COLON value_inheritance_bases T_SUPPORTS interface_names .

    $default  reduce using rule 62 (value_inheritance_spec)


State 326

   68 value_names: scoped_names .

    $default  reduce using rule 68 (value_names)


State 327

   65 value_inheritance_bases: value_name T_COMMA value_names .

    $default  reduce using rule 65 (value_inheritance_bases)


State 328

  215 simple_declarators: simple_declarator T_COMMA . simple_declarators

    T_IDENTIFIER  shift, and go to state 108

    simple_declarator   go to state 294
    simple_declarators  go to state 344


State 329

  213 attr_dcl: T_READONLY T_ATTRIBUTE param_type_spec simple_declarators .

    $default  reduce using rule 213 (attr_dcl)


State 330

  224 parameter_dcls: T_LEFT_PARANTHESIS . param_dcls T_RIGHT_PARANTHESIS
  225               | T_LEFT_PARANTHESIS . T_RIGHT_PARANTHESIS

    T_IN                 shift, and go to state 345
    T_INOUT              shift, and go to state 346
    T_OUT                shift, and go to state 347
    T_RIGHT_PARANTHESIS  shift, and go to state 348

    param_dcls       go to state 349
    param_dcl        go to state 350
    param_attribute  go to state 351


State 331

  219 op_dcl: op_attribute op_type_spec T_IDENTIFIER parameter_dcls . raises_expr context_expr

    T_RAISES  shift, and go to state 352

    $default  reduce using rule 232 (raises_expr)

    raises_expr  go to state 353


State 332

   73 state_member: T_PUBLIC type_spec declarators T_SEMICOLON .

    $default  reduce using rule 73 (state_member)


State 333

   74 state_member: T_PRIVATE type_spec declarators T_SEMICOLON .

    $default  reduce using rule 74 (state_member)


State 334

   79 init_param_attribute: T_IN .

    $default  reduce using rule 79 (init_param_attribute)


State 335

   75 init_dcl: T_FACTORY T_IDENTIFIER T_LEFT_PARANTHESIS init_param_decls . T_RIGHT_PARANTHESIS T_SEMICOLON

    T_RIGHT_PARANTHESIS  shift, and go to state 354


State 336

   76 init_param_decls: init_param_decl .
   77                 | init_param_decl . T_COMMA init_param_decls

    T_COMMA  shift, and go to state 355

    $default  reduce using rule 76 (init_param_decls)


State 337

   78 init_param_decl: init_param_attribute . param_type_spec simple_declarator

    T_ANY         shift, and go to state 74
    T_BOOLEAN     shift, and go to state 36
    T_CHAR        shift, and go to state 37
    T_DOUBLE      shift, and go to state 38
    T_FLOAT       shift, and go to state 40
    T_IDENTIFIER  shift, and go to state 41
    T_LONG        shift, and go to state 42
    T_OCTET       shift, and go to state 43
    T_PRINCIPAL   shift, and go to state 76
    T_SCOPE       shift, and go to state 44
    T_SHORT       shift, and go to state 45
    T_STRING      shift, and go to state 46
    T_OBJECT      shift, and go to state 78
    T_UNSIGNED    shift, and go to state 47
    T_WCHAR       shift, and go to state 48
    T_WSTRING     shift, and go to state 49
    T_VALUEBASE   shift, and go to state 79

    scoped_name            go to state 227
    base_type_spec         go to state 228
    floating_pt_type       go to state 86
    integer_type           go to state 87
    signed_int             go to state 54
    signed_short_int       go to state 55
    signed_long_int        go to state 56
    signed_longlong_int    go to state 57
    unsigned_int           go to state 58
    unsigned_short_int     go to state 59
    unsigned_long_int      go to state 60
    unsigned_longlong_int  go to state 61
    char_type              go to state 88
    wide_char_type         go to state 89
    boolean_type           go to state 90
    octet_type             go to state 91
    any_type               go to state 92
    object_type            go to state 93
    string_type            go to state 229
    wide_string_type       go to state 230
    param_type_spec        go to state 356
    value_base_type        go to state 101
    principal_type         go to state 102


State 338

   16 module: T_MODULE T_IDENTIFIER $@1 T_LEFT_CURLY_BRACKET definitions $@2 T_RIGHT_CURLY_BRACKET .

    $default  reduce using rule 16 (module)


State 339

  244 fixed_pt_type: T_FIXED T_LESS_THAN_SIGN positive_int_const T_COMMA T_INTEGER_LITERAL T_GREATER_THAN_SIGN .

    $default  reduce using rule 244 (fixed_pt_type)


State 340

  202 sequence_type: T_SEQUENCE T_LESS_THAN_SIGN simple_type_spec T_COMMA positive_int_const T_GREATER_THAN_SIGN .

    $default  reduce using rule 202 (sequence_type)


State 341

  185 union_type: T_UNION T_IDENTIFIER T_SWITCH T_LEFT_PARANTHESIS switch_type_spec T_RIGHT_PARANTHESIS @4 . T_LEFT_CURLY_BRACKET switch_body T_RIGHT_CURLY_BRACKET

    T_LEFT_CURLY_BRACKET  shift, and go to state 357


State 342

   50 value_abs_dcl: T_ABSTRACT T_VALUETYPE T_IDENTIFIER value_inheritance_spec T_LEFT_CURLY_BRACKET value_body T_RIGHT_CURLY_BRACKET .

    $default  reduce using rule 50 (value_abs_dcl)


State 343

   67 value_inheritance_bases: T_TRUNCATABLE value_name T_COMMA value_names .

    $default  reduce using rule 67 (value_inheritance_bases)


State 344

  215 simple_declarators: simple_declarator T_COMMA simple_declarators .

    $default  reduce using rule 215 (simple_declarators)


State 345

  229 param_attribute: T_IN .

    $default  reduce using rule 229 (param_attribute)


State 346

  231 param_attribute: T_INOUT .

    $default  reduce using rule 231 (param_attribute)


State 347

  230 param_attribute: T_OUT .

    $default  reduce using rule 230 (param_attribute)


State 348

  225 parameter_dcls: T_LEFT_PARANTHESIS T_RIGHT_PARANTHESIS .

    $default  reduce using rule 225 (parameter_dcls)


State 349

  224 parameter_dcls: T_LEFT_PARANTHESIS param_dcls . T_RIGHT_PARANTHESIS

    T_RIGHT_PARANTHESIS  shift, and go to state 358


State 350

  226 param_dcls: param_dcl .
  227           | param_dcl . T_COMMA param_dcls

    T_COMMA  shift, and go to state 359

    $default  reduce using rule 226 (param_dcls)


State 351

  228 param_dcl: param_attribute . param_type_spec simple_declarator

    T_ANY         shift, and go to state 74
    T_BOOLEAN     shift, and go to state 36
    T_CHAR        shift, and go to state 37
    T_DOUBLE      shift, and go to state 38
    T_FLOAT       shift, and go to state 40
    T_IDENTIFIER  shift, and go to state 41
    T_LONG        shift, and go to state 42
    T_OCTET       shift, and go to state 43
    T_PRINCIPAL   shift, and go to state 76
    T_SCOPE       shift, and go to state 44
    T_SHORT       shift, and go to state 45
    T_STRING      shift, and go to state 46
    T_OBJECT      shift, and go to state 78
    T_UNSIGNED    shift, and go to state 47
    T_WCHAR       shift, and go to state 48
    T_WSTRING     shift, and go to state 49
    T_VALUEBASE   shift, and go to state 79

    scoped_name            go to state 227
    base_type_spec         go to state 228
    floating_pt_type       go to state 86
    integer_type           go to state 87
    signed_int             go to state 54
    signed_short_int       go to state 55
    signed_long_int        go to state 56
    signed_longlong_int    go to state 57
    unsigned_int           go to state 58
    unsigned_short_int     go to state 59
    unsigned_long_int      go to state 60
    unsigned_longlong_int  go to state 61
    char_type              go to state 88
    wide_char_type         go to state 89
    boolean_type           go to state 90
    octet_type             go to state 91
    any_type               go to state 92
    object_type            go to state 93
    string_type            go to state 229
    wide_string_type       go to state 230
    param_type_spec        go to state 360
    value_base_type        go to state 101
    principal_type         go to state 102


State 352

  233 raises_expr: T_RAISES . T_LEFT_PARANTHESIS scoped_names T_RIGHT_PARANTHESIS

    T_LEFT_PARANTHESIS  shift, and go to state 361


State 353

  219 op_dcl: op_attribute op_type_spec T_IDENTIFIER parameter_dcls raises_expr . context_expr

    T_CONTEXT  shift, and go to state 362

    $default  reduce using rule 234 (context_expr)

    context_expr  go to state 363


State 354

   75 init_dcl: T_FACTORY T_IDENTIFIER T_LEFT_PARANTHESIS init_param_decls T_RIGHT_PARANTHESIS . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 364


State 355

   77 init_param_decls: init_param_decl T_COMMA . init_param_decls

    T_IN  shift, and go to state 334

    init_param_decls      go to state 365
    init_param_decl       go to state 336
    init_param_attribute  go to state 337


State 356

   78 init_param_decl: init_param_attribute param_type_spec . simple_declarator

    T_IDENTIFIER  shift, and go to state 108

    simple_declarator  go to state 366


State 357

  185 union_type: T_UNION T_IDENTIFIER T_SWITCH T_LEFT_PARANTHESIS switch_type_spec T_RIGHT_PARANTHESIS @4 T_LEFT_CURLY_BRACKET . switch_body T_RIGHT_CURLY_BRACKET

    T_CASE     shift, and go to state 367
    T_DEFAULT  shift, and go to state 368

    switch_body  go to state 369
    case         go to state 370
    case_label   go to state 371


State 358

  224 parameter_dcls: T_LEFT_PARANTHESIS param_dcls T_RIGHT_PARANTHESIS .

    $default  reduce using rule 224 (parameter_dcls)


State 359

  227 param_dcls: param_dcl T_COMMA . param_dcls

    T_IN     shift, and go to state 345
    T_INOUT  shift, and go to state 346
    T_OUT    shift, and go to state 347

    param_dcls       go to state 372
    param_dcl        go to state 350
    param_attribute  go to state 351


State 360

  228 param_dcl: param_attribute param_type_spec . simple_declarator

    T_IDENTIFIER  shift, and go to state 108

    simple_declarator  go to state 373


State 361

  233 raises_expr: T_RAISES T_LEFT_PARANTHESIS . scoped_names T_RIGHT_PARANTHESIS

    T_IDENTIFIER  shift, and go to state 41
    T_SCOPE       shift, and go to state 44

    scoped_names  go to state 374
    scoped_name   go to state 208


State 362

  235 context_expr: T_CONTEXT . T_LEFT_PARANTHESIS string_literals T_RIGHT_PARANTHESIS

    T_LEFT_PARANTHESIS  shift, and go to state 375


State 363

  219 op_dcl: op_attribute op_type_spec T_IDENTIFIER parameter_dcls raises_expr context_expr .

    $default  reduce using rule 219 (op_dcl)


State 364

   75 init_dcl: T_FACTORY T_IDENTIFIER T_LEFT_PARANTHESIS init_param_decls T_RIGHT_PARANTHESIS T_SEMICOLON .

    $default  reduce using rule 75 (init_dcl)


State 365

   77 init_param_decls: init_param_decl T_COMMA init_param_decls .

    $default  reduce using rule 77 (init_param_decls)


State 366

   78 init_param_decl: init_param_attribute param_type_spec simple_declarator .

    $default  reduce using rule 78 (init_param_decl)


State 367

  195 case_label: T_CASE . const_exp T_COLON

    T_CHARACTER_LITERAL    shift, and go to state 172
    T_FALSE                shift, and go to state 173
    T_FIXED_PT_LITERAL     shift, and go to state 174
    T_FLOATING_PT_LITERAL  shift, and go to state 175
    T_IDENTIFIER           shift, and go to state 41
    T_INTEGER_LITERAL      shift, and go to state 176
    T_LEFT_PARANTHESIS     shift, and go to state 177
    T_MINUS_SIGN           shift, and go to state 178
    T_PLUS_SIGN            shift, and go to state 179
    T_SCOPE                shift, and go to state 44
    T_STRING_LITERAL       shift, and go to state 180
    T_TILDE                shift, and go to state 181
    T_TRUE                 shift, and go to state 182

    scoped_name       go to state 183
    const_exp         go to state 376
    or_expr           go to state 185
    xor_expr          go to state 186
    and_expr          go to state 187
    shift_expr        go to state 188
    add_expr          go to state 189
    mult_expr         go to state 190
    unary_expr        go to state 191
    primary_expr      go to state 192
    literal           go to state 193
    T_string_literal  go to state 195


State 368

  196 case_label: T_DEFAULT . T_COLON

    T_COLON  shift, and go to state 377


State 369

  185 union_type: T_UNION T_IDENTIFIER T_SWITCH T_LEFT_PARANTHESIS switch_type_spec T_RIGHT_PARANTHESIS @4 T_LEFT_CURLY_BRACKET switch_body . T_RIGHT_CURLY_BRACKET

    T_RIGHT_CURLY_BRACKET  shift, and go to state 378


State 370

  191 switch_body: case .
  192            | case . switch_body

    T_CASE     shift, and go to state 367
    T_DEFAULT  shift, and go to state 368

    $default  reduce using rule 191 (switch_body)

    switch_body  go to state 379
    case         go to state 370
    case_label   go to state 371


State 371

  193 case: case_label . case
  194     | case_label . element_spec T_SEMICOLON

    T_ANY         shift, and go to state 74
    T_BOOLEAN     shift, and go to state 36
    T_CASE        shift, and go to state 367
    T_CHAR        shift, and go to state 37
    T_DEFAULT     shift, and go to state 368
    T_DOUBLE      shift, and go to state 38
    T_ENUM        shift, and go to state 3
    T_FIXED       shift, and go to state 75
    T_FLOAT       shift, and go to state 40
    T_IDENTIFIER  shift, and go to state 41
    T_LONG        shift, and go to state 42
    T_OCTET       shift, and go to state 43
    T_PRINCIPAL   shift, and go to state 76
    T_SCOPE       shift, and go to state 44
    T_SEQUENCE    shift, and go to state 77
    T_SHORT       shift, and go to state 45
    T_STRING      shift, and go to state 46
    T_STRUCT      shift, and go to state 8
    T_OBJECT      shift, and go to state 78
    T_UNION       shift, and go to state 10
    T_UNSIGNED    shift, and go to state 47
    T_WCHAR       shift, and go to state 48
    T_WSTRING     shift, and go to state 49
    T_VALUEBASE   shift, and go to state 79

    scoped_name            go to state 80
    type_spec              go to state 380
    simple_type_spec       go to state 82
    base_type_spec         go to state 83
    template_type_spec     go to state 84
    constr_type_spec       go to state 85
    floating_pt_type       go to state 86
    integer_type           go to state 87
    signed_int             go to state 54
    signed_short_int       go to state 55
    signed_long_int        go to state 56
    signed_longlong_int    go to state 57
    unsigned_int           go to state 58
    unsigned_short_int     go to state 59
    unsigned_long_int      go to state 60
    unsigned_longlong_int  go to state 61
    char_type              go to state 88
    wide_char_type         go to state 89
    boolean_type           go to state 90
    octet_type             go to state 91
    any_type               go to state 92
    object_type            go to state 93
    struct_type            go to state 94
    union_type             go to state 95
    case                   go to state 381
    case_label             go to state 371
    element_spec           go to state 382
    enum_type              go to state 96
    sequence_type          go to state 97
    string_type            go to state 98
    wide_string_type       go to state 99
    fixed_pt_type          go to state 100
    value_base_type        go to state 101
    principal_type         go to state 102


State 372

  227 param_dcls: param_dcl T_COMMA param_dcls .

    $default  reduce using rule 227 (param_dcls)


State 373

  228 param_dcl: param_attribute param_type_spec simple_declarator .

    $default  reduce using rule 228 (param_dcl)


State 374

  233 raises_expr: T_RAISES T_LEFT_PARANTHESIS scoped_names . T_RIGHT_PARANTHESIS

    T_RIGHT_PARANTHESIS  shift, and go to state 383


State 375

  235 context_expr: T_CONTEXT T_LEFT_PARANTHESIS . string_literals T_RIGHT_PARANTHESIS

    T_STRING_LITERAL  shift, and go to state 180

    string_literals   go to state 384
    T_string_literal  go to state 385


State 376

  195 case_label: T_CASE const_exp . T_COLON

    T_COLON  shift, and go to state 386


State 377

  196 case_label: T_DEFAULT T_COLON .

    $default  reduce using rule 196 (case_label)


State 378

  185 union_type: T_UNION T_IDENTIFIER T_SWITCH T_LEFT_PARANTHESIS switch_type_spec T_RIGHT_PARANTHESIS @4 T_LEFT_CURLY_BRACKET switch_body T_RIGHT_CURLY_BRACKET .

    $default  reduce using rule 185 (union_type)


State 379

  192 switch_body: case switch_body .

    $default  reduce using rule 192 (switch_body)


State 380

  197 element_spec: type_spec . declarator

    T_IDENTIFIER  shift, and go to state 137

    declarator          go to state 387
    simple_declarator   go to state 140
    complex_declarator  go to state 141
    array_declarator    go to state 142


State 381

  193 case: case_label case .

    $default  reduce using rule 193 (case)


State 382

  194 case: case_label element_spec . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 388


State 383

  233 raises_expr: T_RAISES T_LEFT_PARANTHESIS scoped_names T_RIGHT_PARANTHESIS .

    $default  reduce using rule 233 (raises_expr)


State 384

  235 context_expr: T_CONTEXT T_LEFT_PARANTHESIS string_literals . T_RIGHT_PARANTHESIS

    T_RIGHT_PARANTHESIS  shift, and go to state 389


State 385

  236 string_literals: T_string_literal .
  237                | T_string_literal . T_COMMA string_literals

    T_COMMA  shift, and go to state 390

    $default  reduce using rule 236 (string_literals)


State 386

  195 case_label: T_CASE const_exp T_COLON .

    $default  reduce using rule 195 (case_label)


State 387

  197 element_spec: type_spec declarator .

    $default  reduce using rule 197 (element_spec)


State 388

  194 case: case_label element_spec T_SEMICOLON .

    $default  reduce using rule 194 (case)


State 389

  235 context_expr: T_CONTEXT T_LEFT_PARANTHESIS string_literals T_RIGHT_PARANTHESIS .

    $default  reduce using rule 235 (context_expr)


State 390

  237 string_literals: T_string_literal T_COMMA . string_literals

    T_STRING_LITERAL  shift, and go to state 180

    string_literals   go to state 391
    T_string_literal  go to state 385


State 391

  237 string_literals: T_string_literal T_COMMA string_literals .

    $default  reduce using rule 237 (string_literals)
